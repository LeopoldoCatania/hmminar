// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// dCNegBin
double dCNegBin(double dY, double dN, double dP, double dLambda, bool bLog, int iTrunc);
RcppExport SEXP _hmminar_dCNegBin(SEXP dYSEXP, SEXP dNSEXP, SEXP dPSEXP, SEXP dLambdaSEXP, SEXP bLogSEXP, SEXP iTruncSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dN(dNSEXP);
    Rcpp::traits::input_parameter< double >::type dP(dPSEXP);
    Rcpp::traits::input_parameter< double >::type dLambda(dLambdaSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    Rcpp::traits::input_parameter< int >::type iTrunc(iTruncSEXP);
    rcpp_result_gen = Rcpp::wrap(dCNegBin(dY, dN, dP, dLambda, bLog, iTrunc));
    return rcpp_result_gen;
END_RCPP
}
// dLLK_cNegBin
double dLLK_cNegBin(arma::vec vY, double dN, double dP, double dLambda);
RcppExport SEXP _hmminar_dLLK_cNegBin(SEXP vYSEXP, SEXP dNSEXP, SEXP dPSEXP, SEXP dLambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< double >::type dN(dNSEXP);
    Rcpp::traits::input_parameter< double >::type dP(dPSEXP);
    Rcpp::traits::input_parameter< double >::type dLambda(dLambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(dLLK_cNegBin(vY, dN, dP, dLambda));
    return rcpp_result_gen;
END_RCPP
}
// EM_CNegBin
Rcpp::List EM_CNegBin(arma::vec vY, double dTol, int iMaxiter);
RcppExport SEXP _hmminar_EM_CNegBin(SEXP vYSEXP, SEXP dTolSEXP, SEXP iMaxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< double >::type dTol(dTolSEXP);
    Rcpp::traits::input_parameter< int >::type iMaxiter(iMaxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(EM_CNegBin(vY, dTol, iMaxiter));
    return rcpp_result_gen;
END_RCPP
}
// EM_MSSumMixPois
Rcpp::List EM_MSSumMixPois(arma::vec vY, int iJ, int iL, arma::vec vMu, arma::vec vNu, arma::vec vOmega, arma::mat mGamma, double dTol, int iMaxiter);
RcppExport SEXP _hmminar_EM_MSSumMixPois(SEXP vYSEXP, SEXP iJSEXP, SEXP iLSEXP, SEXP vMuSEXP, SEXP vNuSEXP, SEXP vOmegaSEXP, SEXP mGammaSEXP, SEXP dTolSEXP, SEXP iMaxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< int >::type iL(iLSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vMu(vMuSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNu(vNuSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    Rcpp::traits::input_parameter< double >::type dTol(dTolSEXP);
    Rcpp::traits::input_parameter< int >::type iMaxiter(iMaxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(EM_MSSumMixPois(vY, iJ, iL, vMu, vNu, vOmega, mGamma, dTol, iMaxiter));
    return rcpp_result_gen;
END_RCPP
}
// EM_MSSumMixPois_Dummy
Rcpp::List EM_MSSumMixPois_Dummy(arma::vec vY, int iJ, int iL, arma::vec vMu, arma::vec vNu, arma::vec vOmega, arma::mat mGamma, arma::vec vBeta, arma::mat mD, double dTol, int iMaxiter);
RcppExport SEXP _hmminar_EM_MSSumMixPois_Dummy(SEXP vYSEXP, SEXP iJSEXP, SEXP iLSEXP, SEXP vMuSEXP, SEXP vNuSEXP, SEXP vOmegaSEXP, SEXP mGammaSEXP, SEXP vBetaSEXP, SEXP mDSEXP, SEXP dTolSEXP, SEXP iMaxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< int >::type iL(iLSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vMu(vMuSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNu(vNuSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    Rcpp::traits::input_parameter< double >::type dTol(dTolSEXP);
    Rcpp::traits::input_parameter< int >::type iMaxiter(iMaxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(EM_MSSumMixPois_Dummy(vY, iJ, iL, vMu, vNu, vOmega, mGamma, vBeta, mD, dTol, iMaxiter));
    return rcpp_result_gen;
END_RCPP
}
// EMInar
List EMInar(arma::vec vY, arma::vec vLogFactorial_K, double dTol, int iMaxiter);
RcppExport SEXP _hmminar_EMInar(SEXP vYSEXP, SEXP vLogFactorial_KSEXP, SEXP dTolSEXP, SEXP iMaxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< double >::type dTol(dTolSEXP);
    Rcpp::traits::input_parameter< int >::type iMaxiter(iMaxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(EMInar(vY, vLogFactorial_K, dTol, iMaxiter));
    return rcpp_result_gen;
END_RCPP
}
// EMMixInar
List EMMixInar(arma::vec vY, int iJ, arma::vec vOmega, double dAlpha, arma::vec vLambda, arma::vec vLogFactorial_K, double dTol, int iMaxiter);
RcppExport SEXP _hmminar_EMMixInar(SEXP vYSEXP, SEXP iJSEXP, SEXP vOmegaSEXP, SEXP dAlphaSEXP, SEXP vLambdaSEXP, SEXP vLogFactorial_KSEXP, SEXP dTolSEXP, SEXP iMaxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< double >::type dTol(dTolSEXP);
    Rcpp::traits::input_parameter< int >::type iMaxiter(iMaxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(EMMixInar(vY, iJ, vOmega, dAlpha, vLambda, vLogFactorial_K, dTol, iMaxiter));
    return rcpp_result_gen;
END_RCPP
}
// EMMixInar_Seasonal
List EMMixInar_Seasonal(arma::vec vY, int iJ, arma::vec vOmega, double dAlpha, arma::vec vLambda, arma::vec vBeta, arma::vec vLogFactorial_K, arma::mat mD, double dTol, int iMaxiter);
RcppExport SEXP _hmminar_EMMixInar_Seasonal(SEXP vYSEXP, SEXP iJSEXP, SEXP vOmegaSEXP, SEXP dAlphaSEXP, SEXP vLambdaSEXP, SEXP vBetaSEXP, SEXP vLogFactorial_KSEXP, SEXP mDSEXP, SEXP dTolSEXP, SEXP iMaxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    Rcpp::traits::input_parameter< double >::type dTol(dTolSEXP);
    Rcpp::traits::input_parameter< int >::type iMaxiter(iMaxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(EMMixInar_Seasonal(vY, iJ, vOmega, dAlpha, vLambda, vBeta, vLogFactorial_K, mD, dTol, iMaxiter));
    return rcpp_result_gen;
END_RCPP
}
// EMMixInar_Seasonal2
List EMMixInar_Seasonal2(arma::vec vY, int iJ, arma::vec vOmega, double dAlpha, arma::vec vLambda, arma::vec vBeta, arma::vec vLogFactorial_K, arma::mat mD, double dTol, int iMaxiter);
RcppExport SEXP _hmminar_EMMixInar_Seasonal2(SEXP vYSEXP, SEXP iJSEXP, SEXP vOmegaSEXP, SEXP dAlphaSEXP, SEXP vLambdaSEXP, SEXP vBetaSEXP, SEXP vLogFactorial_KSEXP, SEXP mDSEXP, SEXP dTolSEXP, SEXP iMaxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    Rcpp::traits::input_parameter< double >::type dTol(dTolSEXP);
    Rcpp::traits::input_parameter< int >::type iMaxiter(iMaxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(EMMixInar_Seasonal2(vY, iJ, vOmega, dAlpha, vLambda, vBeta, vLogFactorial_K, mD, dTol, iMaxiter));
    return rcpp_result_gen;
END_RCPP
}
// EMMixInarP_Seasonal
List EMMixInarP_Seasonal(arma::vec vY, int iJ, int iP, arma::vec vOmega, double dAlpha, arma::vec vLambda, arma::vec vBeta, arma::mat mD, double dTol, int iMaxiter);
RcppExport SEXP _hmminar_EMMixInarP_Seasonal(SEXP vYSEXP, SEXP iJSEXP, SEXP iPSEXP, SEXP vOmegaSEXP, SEXP dAlphaSEXP, SEXP vLambdaSEXP, SEXP vBetaSEXP, SEXP mDSEXP, SEXP dTolSEXP, SEXP iMaxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< int >::type iP(iPSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    Rcpp::traits::input_parameter< double >::type dTol(dTolSEXP);
    Rcpp::traits::input_parameter< int >::type iMaxiter(iMaxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(EMMixInarP_Seasonal(vY, iJ, iP, vOmega, dAlpha, vLambda, vBeta, mD, dTol, iMaxiter));
    return rcpp_result_gen;
END_RCPP
}
// dPOI
double dPOI(double dY, double dLambda, int iLog);
RcppExport SEXP _hmminar_dPOI(SEXP dYSEXP, SEXP dLambdaSEXP, SEXP iLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dLambda(dLambdaSEXP);
    Rcpp::traits::input_parameter< int >::type iLog(iLogSEXP);
    rcpp_result_gen = Rcpp::wrap(dPOI(dY, dLambda, iLog));
    return rcpp_result_gen;
END_RCPP
}
// EM_Mixture_Pois
List EM_Mixture_Pois(arma::vec vY, int iJ, int maxIter, double tol);
RcppExport SEXP _hmminar_EM_Mixture_Pois(SEXP vYSEXP, SEXP iJSEXP, SEXP maxIterSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(EM_Mixture_Pois(vY, iJ, maxIter, tol));
    return rcpp_result_gen;
END_RCPP
}
// EM_NegBin
Rcpp::List EM_NegBin(arma::vec vY, double dTol, int iMaxiter);
RcppExport SEXP _hmminar_EM_NegBin(SEXP vYSEXP, SEXP dTolSEXP, SEXP iMaxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< double >::type dTol(dTolSEXP);
    Rcpp::traits::input_parameter< int >::type iMaxiter(iMaxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(EM_NegBin(vY, dTol, iMaxiter));
    return rcpp_result_gen;
END_RCPP
}
// EM_Neyman
Rcpp::List EM_Neyman(arma::vec vY, double dTol, int iMaxiter);
RcppExport SEXP _hmminar_EM_Neyman(SEXP vYSEXP, SEXP dTolSEXP, SEXP iMaxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< double >::type dTol(dTolSEXP);
    Rcpp::traits::input_parameter< int >::type iMaxiter(iMaxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(EM_Neyman(vY, dTol, iMaxiter));
    return rcpp_result_gen;
END_RCPP
}
// EM_SumMixPois
Rcpp::List EM_SumMixPois(arma::vec vY, int iJ, double dMu, arma::vec vNu, arma::vec vOmega, double dTol, int iMaxiter);
RcppExport SEXP _hmminar_EM_SumMixPois(SEXP vYSEXP, SEXP iJSEXP, SEXP dMuSEXP, SEXP vNuSEXP, SEXP vOmegaSEXP, SEXP dTolSEXP, SEXP iMaxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< double >::type dMu(dMuSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNu(vNuSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< double >::type dTol(dTolSEXP);
    Rcpp::traits::input_parameter< int >::type iMaxiter(iMaxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(EM_SumMixPois(vY, iJ, dMu, vNu, vOmega, dTol, iMaxiter));
    return rcpp_result_gen;
END_RCPP
}
// FFBS
List FFBS(arma::mat allprobs, arma::vec delta, arma::mat mGamma, int iJ, int iT);
RcppExport SEXP _hmminar_FFBS(SEXP allprobsSEXP, SEXP deltaSEXP, SEXP mGammaSEXP, SEXP iJSEXP, SEXP iTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type allprobs(allprobsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    rcpp_result_gen = Rcpp::wrap(FFBS(allprobs, delta, mGamma, iJ, iT));
    return rcpp_result_gen;
END_RCPP
}
// FFBS_robust
List FFBS_robust(arma::mat lallprobs, arma::vec delta, arma::mat mGamma, int iJ, int iT);
RcppExport SEXP _hmminar_FFBS_robust(SEXP lallprobsSEXP, SEXP deltaSEXP, SEXP mGammaSEXP, SEXP iJSEXP, SEXP iTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type lallprobs(lallprobsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    rcpp_result_gen = Rcpp::wrap(FFBS_robust(lallprobs, delta, mGamma, iJ, iT));
    return rcpp_result_gen;
END_RCPP
}
// EM_MSMixInar
List EM_MSMixInar(arma::vec vY, int iJ, int iM, arma::vec vOmega, arma::vec vLambda, arma::vec vAlpha, arma::mat mGamma, arma::vec vDelta, arma::vec vBeta, arma::mat mD, arma::vec vLogFactorial_K, double dTol, int iMaxiter);
RcppExport SEXP _hmminar_EM_MSMixInar(SEXP vYSEXP, SEXP iJSEXP, SEXP iMSEXP, SEXP vOmegaSEXP, SEXP vLambdaSEXP, SEXP vAlphaSEXP, SEXP mGammaSEXP, SEXP vDeltaSEXP, SEXP vBetaSEXP, SEXP mDSEXP, SEXP vLogFactorial_KSEXP, SEXP dTolSEXP, SEXP iMaxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< int >::type iM(iMSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vAlpha(vAlphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vDelta(vDeltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< double >::type dTol(dTolSEXP);
    Rcpp::traits::input_parameter< int >::type iMaxiter(iMaxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(EM_MSMixInar(vY, iJ, iM, vOmega, vLambda, vAlpha, mGamma, vDelta, vBeta, mD, vLogFactorial_K, dTol, iMaxiter));
    return rcpp_result_gen;
END_RCPP
}
// EM_MSMixInar_OmegaChain
List EM_MSMixInar_OmegaChain(arma::vec vY, int iJ, int iM, arma::mat mOmega, arma::vec vLambda, double dAlpha, arma::mat mGamma, arma::vec vDelta, arma::vec vBeta, arma::mat mD, arma::vec vLogFactorial_K, double dTol, int iMaxiter);
RcppExport SEXP _hmminar_EM_MSMixInar_OmegaChain(SEXP vYSEXP, SEXP iJSEXP, SEXP iMSEXP, SEXP mOmegaSEXP, SEXP vLambdaSEXP, SEXP dAlphaSEXP, SEXP mGammaSEXP, SEXP vDeltaSEXP, SEXP vBetaSEXP, SEXP mDSEXP, SEXP vLogFactorial_KSEXP, SEXP dTolSEXP, SEXP iMaxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< int >::type iM(iMSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mOmega(mOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vDelta(vDeltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< double >::type dTol(dTolSEXP);
    Rcpp::traits::input_parameter< int >::type iMaxiter(iMaxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(EM_MSMixInar_OmegaChain(vY, iJ, iM, mOmega, vLambda, dAlpha, mGamma, vDelta, vBeta, mD, vLogFactorial_K, dTol, iMaxiter));
    return rcpp_result_gen;
END_RCPP
}
// EM_MSMixInar_v2
List EM_MSMixInar_v2(arma::vec vY, int iJ, int iM, arma::vec vOmega, arma::vec vLambda, arma::vec vMu, double dAlpha, arma::mat mGamma, arma::vec vDelta, arma::vec vBeta, arma::mat mD, double dTol, int iMaxiter);
RcppExport SEXP _hmminar_EM_MSMixInar_v2(SEXP vYSEXP, SEXP iJSEXP, SEXP iMSEXP, SEXP vOmegaSEXP, SEXP vLambdaSEXP, SEXP vMuSEXP, SEXP dAlphaSEXP, SEXP mGammaSEXP, SEXP vDeltaSEXP, SEXP vBetaSEXP, SEXP mDSEXP, SEXP dTolSEXP, SEXP iMaxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< int >::type iM(iMSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vMu(vMuSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vDelta(vDeltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    Rcpp::traits::input_parameter< double >::type dTol(dTolSEXP);
    Rcpp::traits::input_parameter< int >::type iMaxiter(iMaxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(EM_MSMixInar_v2(vY, iJ, iM, vOmega, vLambda, vMu, dAlpha, mGamma, vDelta, vBeta, mD, dTol, iMaxiter));
    return rcpp_result_gen;
END_RCPP
}
// Filtering_MSMixInar_v2_Seasonal_Dummy_Inv
List Filtering_MSMixInar_v2_Seasonal_Dummy_Inv(arma::vec vY, int iJ, int iM, arma::vec vOmega, arma::vec vLambda, arma::vec vMu, double dAlpha, arma::mat mGamma, arma::vec vDelta, arma::vec vBeta, arma::mat mD);
RcppExport SEXP _hmminar_Filtering_MSMixInar_v2_Seasonal_Dummy_Inv(SEXP vYSEXP, SEXP iJSEXP, SEXP iMSEXP, SEXP vOmegaSEXP, SEXP vLambdaSEXP, SEXP vMuSEXP, SEXP dAlphaSEXP, SEXP mGammaSEXP, SEXP vDeltaSEXP, SEXP vBetaSEXP, SEXP mDSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< int >::type iM(iMSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vMu(vMuSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vDelta(vDeltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    rcpp_result_gen = Rcpp::wrap(Filtering_MSMixInar_v2_Seasonal_Dummy_Inv(vY, iJ, iM, vOmega, vLambda, vMu, dAlpha, mGamma, vDelta, vBeta, mD));
    return rcpp_result_gen;
END_RCPP
}
// EM_MSMixInar_v3
List EM_MSMixInar_v3(arma::vec vY, int iJ, int iM, arma::vec vOmega, arma::mat mLambda, double dAlpha, arma::mat mGamma, arma::vec vDelta, arma::vec vBeta, arma::mat mD, double dTol, int iMaxiter);
RcppExport SEXP _hmminar_EM_MSMixInar_v3(SEXP vYSEXP, SEXP iJSEXP, SEXP iMSEXP, SEXP vOmegaSEXP, SEXP mLambdaSEXP, SEXP dAlphaSEXP, SEXP mGammaSEXP, SEXP vDeltaSEXP, SEXP vBetaSEXP, SEXP mDSEXP, SEXP dTolSEXP, SEXP iMaxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< int >::type iM(iMSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mLambda(mLambdaSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vDelta(vDeltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    Rcpp::traits::input_parameter< double >::type dTol(dTolSEXP);
    Rcpp::traits::input_parameter< int >::type iMaxiter(iMaxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(EM_MSMixInar_v3(vY, iJ, iM, vOmega, mLambda, dAlpha, mGamma, vDelta, vBeta, mD, dTol, iMaxiter));
    return rcpp_result_gen;
END_RCPP
}
// Filtering_MSMixInar_Seasonal_Dummy
List Filtering_MSMixInar_Seasonal_Dummy(arma::vec vY, int iJ, int iM, arma::vec vOmega, arma::vec vLambda, arma::vec vAlpha, arma::mat mGamma, arma::vec vDelta, arma::vec vBeta, arma::mat mD);
RcppExport SEXP _hmminar_Filtering_MSMixInar_Seasonal_Dummy(SEXP vYSEXP, SEXP iJSEXP, SEXP iMSEXP, SEXP vOmegaSEXP, SEXP vLambdaSEXP, SEXP vAlphaSEXP, SEXP mGammaSEXP, SEXP vDeltaSEXP, SEXP vBetaSEXP, SEXP mDSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< int >::type iM(iMSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vAlpha(vAlphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vDelta(vDeltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    rcpp_result_gen = Rcpp::wrap(Filtering_MSMixInar_Seasonal_Dummy(vY, iJ, iM, vOmega, vLambda, vAlpha, mGamma, vDelta, vBeta, mD));
    return rcpp_result_gen;
END_RCPP
}
// Filtering_MSMixInar_v3_Seasonal_Dummy
List Filtering_MSMixInar_v3_Seasonal_Dummy(arma::vec vY, int iJ, int iM, arma::vec vOmega, arma::mat mLambda, double dAlpha, arma::mat mGamma, arma::vec vDelta, arma::vec vBeta, arma::mat mD);
RcppExport SEXP _hmminar_Filtering_MSMixInar_v3_Seasonal_Dummy(SEXP vYSEXP, SEXP iJSEXP, SEXP iMSEXP, SEXP vOmegaSEXP, SEXP mLambdaSEXP, SEXP dAlphaSEXP, SEXP mGammaSEXP, SEXP vDeltaSEXP, SEXP vBetaSEXP, SEXP mDSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< int >::type iM(iMSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mLambda(mLambdaSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vDelta(vDeltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    rcpp_result_gen = Rcpp::wrap(Filtering_MSMixInar_v3_Seasonal_Dummy(vY, iJ, iM, vOmega, mLambda, dAlpha, mGamma, vDelta, vBeta, mD));
    return rcpp_result_gen;
END_RCPP
}
// Sim_MSMixInar_Seasonal_Dummy
arma::vec Sim_MSMixInar_Seasonal_Dummy(int iT, arma::vec vOmega, arma::vec vLambda, arma::vec vAlpha, arma::mat mGamma, arma::vec vDelta, arma::vec vBeta, arma::mat mD);
RcppExport SEXP _hmminar_Sim_MSMixInar_Seasonal_Dummy(SEXP iTSEXP, SEXP vOmegaSEXP, SEXP vLambdaSEXP, SEXP vAlphaSEXP, SEXP mGammaSEXP, SEXP vDeltaSEXP, SEXP vBetaSEXP, SEXP mDSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vAlpha(vAlphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vDelta(vDeltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    rcpp_result_gen = Rcpp::wrap(Sim_MSMixInar_Seasonal_Dummy(iT, vOmega, vLambda, vAlpha, mGamma, vDelta, vBeta, mD));
    return rcpp_result_gen;
END_RCPP
}
// Sim_MSMixInar_v2_Seasonal_Dummy
arma::vec Sim_MSMixInar_v2_Seasonal_Dummy(int iT, arma::vec vOmega, arma::vec vLambda, arma::vec vMu, double dAlpha, arma::mat mGamma, arma::vec vDelta, arma::vec vBeta, arma::mat mD);
RcppExport SEXP _hmminar_Sim_MSMixInar_v2_Seasonal_Dummy(SEXP iTSEXP, SEXP vOmegaSEXP, SEXP vLambdaSEXP, SEXP vMuSEXP, SEXP dAlphaSEXP, SEXP mGammaSEXP, SEXP vDeltaSEXP, SEXP vBetaSEXP, SEXP mDSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vMu(vMuSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vDelta(vDeltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    rcpp_result_gen = Rcpp::wrap(Sim_MSMixInar_v2_Seasonal_Dummy(iT, vOmega, vLambda, vMu, dAlpha, mGamma, vDelta, vBeta, mD));
    return rcpp_result_gen;
END_RCPP
}
// Sim_MSMixInar_v3_Seasonal_Dummy
arma::vec Sim_MSMixInar_v3_Seasonal_Dummy(int iT, arma::vec vOmega, arma::mat mLambda, double dAlpha, arma::mat mGamma, arma::vec vDelta, arma::vec vBeta, arma::mat mD);
RcppExport SEXP _hmminar_Sim_MSMixInar_v3_Seasonal_Dummy(SEXP iTSEXP, SEXP vOmegaSEXP, SEXP mLambdaSEXP, SEXP dAlphaSEXP, SEXP mGammaSEXP, SEXP vDeltaSEXP, SEXP vBetaSEXP, SEXP mDSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mLambda(mLambdaSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vDelta(vDeltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    rcpp_result_gen = Rcpp::wrap(Sim_MSMixInar_v3_Seasonal_Dummy(iT, vOmega, mLambda, dAlpha, mGamma, vDelta, vBeta, mD));
    return rcpp_result_gen;
END_RCPP
}
// Filtering_MSMixInar_v2_Seasonal_Dummy
List Filtering_MSMixInar_v2_Seasonal_Dummy(arma::vec vY, int iJ, int iM, arma::vec vOmega, arma::vec vLambda, arma::vec vMu, double dAlpha, arma::mat mGamma, arma::vec vDelta, arma::vec vBeta, arma::mat mD);
RcppExport SEXP _hmminar_Filtering_MSMixInar_v2_Seasonal_Dummy(SEXP vYSEXP, SEXP iJSEXP, SEXP iMSEXP, SEXP vOmegaSEXP, SEXP vLambdaSEXP, SEXP vMuSEXP, SEXP dAlphaSEXP, SEXP mGammaSEXP, SEXP vDeltaSEXP, SEXP vBetaSEXP, SEXP mDSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< int >::type iM(iMSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vMu(vMuSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vDelta(vDeltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    rcpp_result_gen = Rcpp::wrap(Filtering_MSMixInar_v2_Seasonal_Dummy(vY, iJ, iM, vOmega, vLambda, vMu, dAlpha, mGamma, vDelta, vBeta, mD));
    return rcpp_result_gen;
END_RCPP
}
// EM_MSMixInar_v2_Inv
List EM_MSMixInar_v2_Inv(arma::vec vY, int iJ, int iM, arma::vec vOmega, arma::vec vLambda, arma::vec vMu, double dAlpha, arma::mat mGamma, arma::vec vDelta, arma::vec vBeta, arma::mat mD, double dTol, int iMaxiter);
RcppExport SEXP _hmminar_EM_MSMixInar_v2_Inv(SEXP vYSEXP, SEXP iJSEXP, SEXP iMSEXP, SEXP vOmegaSEXP, SEXP vLambdaSEXP, SEXP vMuSEXP, SEXP dAlphaSEXP, SEXP mGammaSEXP, SEXP vDeltaSEXP, SEXP vBetaSEXP, SEXP mDSEXP, SEXP dTolSEXP, SEXP iMaxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< int >::type iM(iMSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vMu(vMuSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vDelta(vDeltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    Rcpp::traits::input_parameter< double >::type dTol(dTolSEXP);
    Rcpp::traits::input_parameter< int >::type iMaxiter(iMaxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(EM_MSMixInar_v2_Inv(vY, iJ, iM, vOmega, vLambda, vMu, dAlpha, mGamma, vDelta, vBeta, mD, dTol, iMaxiter));
    return rcpp_result_gen;
END_RCPP
}
// Sim_MSMixInar_v2_Seasonal_Dummy_Inv
arma::vec Sim_MSMixInar_v2_Seasonal_Dummy_Inv(int iT, arma::vec vOmega, arma::vec vLambda, arma::vec vMu, double dAlpha, arma::mat mGamma, arma::vec vDelta, arma::vec vBeta, arma::mat mD);
RcppExport SEXP _hmminar_Sim_MSMixInar_v2_Seasonal_Dummy_Inv(SEXP iTSEXP, SEXP vOmegaSEXP, SEXP vLambdaSEXP, SEXP vMuSEXP, SEXP dAlphaSEXP, SEXP mGammaSEXP, SEXP vDeltaSEXP, SEXP vBetaSEXP, SEXP mDSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vMu(vMuSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vDelta(vDeltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    rcpp_result_gen = Rcpp::wrap(Sim_MSMixInar_v2_Seasonal_Dummy_Inv(iT, vOmega, vLambda, vMu, dAlpha, mGamma, vDelta, vBeta, mD));
    return rcpp_result_gen;
END_RCPP
}
// EM_MSMixInarTwoChains_Dummy_C2
List EM_MSMixInarTwoChains_Dummy_C2(arma::vec vY, int iJ, int iK, int iL, arma::mat mGamma_Eta, arma::mat mGamma_Alpha, arma::mat mOmega, arma::vec vLambda, arma::vec vAlpha, arma::vec vBeta, arma::vec vSeason, arma::vec vLogFactorial_K, int maxIter, double tol, bool bSeasonal);
RcppExport SEXP _hmminar_EM_MSMixInarTwoChains_Dummy_C2(SEXP vYSEXP, SEXP iJSEXP, SEXP iKSEXP, SEXP iLSEXP, SEXP mGamma_EtaSEXP, SEXP mGamma_AlphaSEXP, SEXP mOmegaSEXP, SEXP vLambdaSEXP, SEXP vAlphaSEXP, SEXP vBetaSEXP, SEXP vSeasonSEXP, SEXP vLogFactorial_KSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP bSeasonalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< int >::type iK(iKSEXP);
    Rcpp::traits::input_parameter< int >::type iL(iLSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma_Eta(mGamma_EtaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma_Alpha(mGamma_AlphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mOmega(mOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vAlpha(vAlphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vSeason(vSeasonSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< bool >::type bSeasonal(bSeasonalSEXP);
    rcpp_result_gen = Rcpp::wrap(EM_MSMixInarTwoChains_Dummy_C2(vY, iJ, iK, iL, mGamma_Eta, mGamma_Alpha, mOmega, vLambda, vAlpha, vBeta, vSeason, vLogFactorial_K, maxIter, tol, bSeasonal));
    return rcpp_result_gen;
END_RCPP
}
// EM_MSMixInarTwoChains_Dummy_C_AlphaCor
List EM_MSMixInarTwoChains_Dummy_C_AlphaCor(arma::vec vY, int iJ, int iK, int iL, arma::mat mGamma_Eta, arma::mat mGamma_Alpha, arma::mat mOmega, arma::vec vLambda, arma::vec vAlpha, arma::vec vBeta, double dVarPhi, arma::vec vSeason, arma::vec vLogFactorial_K, arma::vec vO, int maxIter, double tol, bool bSeasonal, bool bFilter);
RcppExport SEXP _hmminar_EM_MSMixInarTwoChains_Dummy_C_AlphaCor(SEXP vYSEXP, SEXP iJSEXP, SEXP iKSEXP, SEXP iLSEXP, SEXP mGamma_EtaSEXP, SEXP mGamma_AlphaSEXP, SEXP mOmegaSEXP, SEXP vLambdaSEXP, SEXP vAlphaSEXP, SEXP vBetaSEXP, SEXP dVarPhiSEXP, SEXP vSeasonSEXP, SEXP vLogFactorial_KSEXP, SEXP vOSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP bSeasonalSEXP, SEXP bFilterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< int >::type iK(iKSEXP);
    Rcpp::traits::input_parameter< int >::type iL(iLSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma_Eta(mGamma_EtaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma_Alpha(mGamma_AlphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mOmega(mOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vAlpha(vAlphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< double >::type dVarPhi(dVarPhiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vSeason(vSeasonSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vO(vOSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< bool >::type bSeasonal(bSeasonalSEXP);
    Rcpp::traits::input_parameter< bool >::type bFilter(bFilterSEXP);
    rcpp_result_gen = Rcpp::wrap(EM_MSMixInarTwoChains_Dummy_C_AlphaCor(vY, iJ, iK, iL, mGamma_Eta, mGamma_Alpha, mOmega, vLambda, vAlpha, vBeta, dVarPhi, vSeason, vLogFactorial_K, vO, maxIter, tol, bSeasonal, bFilter));
    return rcpp_result_gen;
END_RCPP
}
// EM_MSMixInarTwoChains_Dummy_C_AlphaCor_OmegaIdentity
List EM_MSMixInarTwoChains_Dummy_C_AlphaCor_OmegaIdentity(arma::vec vY, int iJ, int iK, int iL, arma::mat mGamma_Eta, arma::mat mGamma_Alpha, arma::mat mOmega, arma::vec vLambda, arma::vec vAlpha, arma::vec vBeta, double dVarPhi, arma::vec vSeason, arma::vec vLogFactorial_K, arma::vec vO, int maxIter, double tol, bool bSeasonal, bool bFilter);
RcppExport SEXP _hmminar_EM_MSMixInarTwoChains_Dummy_C_AlphaCor_OmegaIdentity(SEXP vYSEXP, SEXP iJSEXP, SEXP iKSEXP, SEXP iLSEXP, SEXP mGamma_EtaSEXP, SEXP mGamma_AlphaSEXP, SEXP mOmegaSEXP, SEXP vLambdaSEXP, SEXP vAlphaSEXP, SEXP vBetaSEXP, SEXP dVarPhiSEXP, SEXP vSeasonSEXP, SEXP vLogFactorial_KSEXP, SEXP vOSEXP, SEXP maxIterSEXP, SEXP tolSEXP, SEXP bSeasonalSEXP, SEXP bFilterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< int >::type iK(iKSEXP);
    Rcpp::traits::input_parameter< int >::type iL(iLSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma_Eta(mGamma_EtaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma_Alpha(mGamma_AlphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mOmega(mOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vAlpha(vAlphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< double >::type dVarPhi(dVarPhiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vSeason(vSeasonSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vO(vOSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< bool >::type bSeasonal(bSeasonalSEXP);
    Rcpp::traits::input_parameter< bool >::type bFilter(bFilterSEXP);
    rcpp_result_gen = Rcpp::wrap(EM_MSMixInarTwoChains_Dummy_C_AlphaCor_OmegaIdentity(vY, iJ, iK, iL, mGamma_Eta, mGamma_Alpha, mOmega, vLambda, vAlpha, vBeta, dVarPhi, vSeason, vLogFactorial_K, vO, maxIter, tol, bSeasonal, bFilter));
    return rcpp_result_gen;
END_RCPP
}
// InitializeBeta_INAR
List InitializeBeta_INAR(arma::vec vY, arma::vec vBeta, arma::vec vSeason, arma::vec vLogFactorial_K, int iMaxiter, double dTol);
RcppExport SEXP _hmminar_InitializeBeta_INAR(SEXP vYSEXP, SEXP vBetaSEXP, SEXP vSeasonSEXP, SEXP vLogFactorial_KSEXP, SEXP iMaxiterSEXP, SEXP dTolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vSeason(vSeasonSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< int >::type iMaxiter(iMaxiterSEXP);
    Rcpp::traits::input_parameter< double >::type dTol(dTolSEXP);
    rcpp_result_gen = Rcpp::wrap(InitializeBeta_INAR(vY, vBeta, vSeason, vLogFactorial_K, iMaxiter, dTol));
    return rcpp_result_gen;
END_RCPP
}
// Sim_MSMixInarTwoChains
List Sim_MSMixInarTwoChains(int iT, arma::mat mOmega, arma::vec vLambda, arma::vec vAlpha, arma::mat mGamma_Alpha, arma::mat mGamma_Eta, arma::vec vBeta, arma::mat mD);
RcppExport SEXP _hmminar_Sim_MSMixInarTwoChains(SEXP iTSEXP, SEXP mOmegaSEXP, SEXP vLambdaSEXP, SEXP vAlphaSEXP, SEXP mGamma_AlphaSEXP, SEXP mGamma_EtaSEXP, SEXP vBetaSEXP, SEXP mDSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mOmega(mOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vAlpha(vAlphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma_Alpha(mGamma_AlphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma_Eta(mGamma_EtaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    rcpp_result_gen = Rcpp::wrap(Sim_MSMixInarTwoChains(iT, mOmega, vLambda, vAlpha, mGamma_Alpha, mGamma_Eta, vBeta, mD));
    return rcpp_result_gen;
END_RCPP
}
// Sim_MSMixInarTwoChains_AlphaCor
List Sim_MSMixInarTwoChains_AlphaCor(int iT, arma::mat mOmega, arma::vec vLambda, arma::vec vAlpha, arma::mat mGamma_Alpha, arma::mat mGamma_Eta, arma::vec vBeta, double dVarPhi, arma::vec vO, arma::vec vSeason);
RcppExport SEXP _hmminar_Sim_MSMixInarTwoChains_AlphaCor(SEXP iTSEXP, SEXP mOmegaSEXP, SEXP vLambdaSEXP, SEXP vAlphaSEXP, SEXP mGamma_AlphaSEXP, SEXP mGamma_EtaSEXP, SEXP vBetaSEXP, SEXP dVarPhiSEXP, SEXP vOSEXP, SEXP vSeasonSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mOmega(mOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vAlpha(vAlphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma_Alpha(mGamma_AlphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma_Eta(mGamma_EtaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< double >::type dVarPhi(dVarPhiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vO(vOSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vSeason(vSeasonSEXP);
    rcpp_result_gen = Rcpp::wrap(Sim_MSMixInarTwoChains_AlphaCor(iT, mOmega, vLambda, vAlpha, mGamma_Alpha, mGamma_Eta, vBeta, dVarPhi, vO, vSeason));
    return rcpp_result_gen;
END_RCPP
}
// Sim_MSMixInarOneChain_AlphaCor
List Sim_MSMixInarOneChain_AlphaCor(int iT, arma::vec vLambda, arma::vec vAlpha, arma::mat mGamma, arma::vec vBeta, double dVarPhi, arma::vec vO, arma::vec vSeason);
RcppExport SEXP _hmminar_Sim_MSMixInarOneChain_AlphaCor(SEXP iTSEXP, SEXP vLambdaSEXP, SEXP vAlphaSEXP, SEXP mGammaSEXP, SEXP vBetaSEXP, SEXP dVarPhiSEXP, SEXP vOSEXP, SEXP vSeasonSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vAlpha(vAlphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< double >::type dVarPhi(dVarPhiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vO(vOSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vSeason(vSeasonSEXP);
    rcpp_result_gen = Rcpp::wrap(Sim_MSMixInarOneChain_AlphaCor(iT, vLambda, vAlpha, mGamma, vBeta, dVarPhi, vO, vSeason));
    return rcpp_result_gen;
END_RCPP
}
// Sim_INAR
List Sim_INAR(int iT, double dAlpha, double dLambda);
RcppExport SEXP _hmminar_Sim_INAR(SEXP iTSEXP, SEXP dAlphaSEXP, SEXP dLambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< double >::type dLambda(dLambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(Sim_INAR(iT, dAlpha, dLambda));
    return rcpp_result_gen;
END_RCPP
}
// dE1
double dE1(arma::mat mGamma_OmegaZB, arma::mat mIndices, arma::vec vLambda, arma::vec vAlpha);
RcppExport SEXP _hmminar_dE1(SEXP mGamma_OmegaZBSEXP, SEXP mIndicesSEXP, SEXP vLambdaSEXP, SEXP vAlphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mGamma_OmegaZB(mGamma_OmegaZBSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mIndices(mIndicesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vAlpha(vAlphaSEXP);
    rcpp_result_gen = Rcpp::wrap(dE1(mGamma_OmegaZB, mIndices, vLambda, vAlpha));
    return rcpp_result_gen;
END_RCPP
}
// dE2
double dE2(arma::mat mGamma_OmegaZB, arma::mat mIndices, arma::vec vLambda, arma::vec vAlpha);
RcppExport SEXP _hmminar_dE2(SEXP mGamma_OmegaZBSEXP, SEXP mIndicesSEXP, SEXP vLambdaSEXP, SEXP vAlphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mGamma_OmegaZB(mGamma_OmegaZBSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mIndices(mIndicesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vAlpha(vAlphaSEXP);
    rcpp_result_gen = Rcpp::wrap(dE2(mGamma_OmegaZB, mIndices, vLambda, vAlpha));
    return rcpp_result_gen;
END_RCPP
}
// dFoo
double dFoo(arma::mat mGamma_OmegaZB, arma::mat mIndices, arma::vec vLambda, arma::vec vAlpha);
RcppExport SEXP _hmminar_dFoo(SEXP mGamma_OmegaZBSEXP, SEXP mIndicesSEXP, SEXP vLambdaSEXP, SEXP vAlphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mGamma_OmegaZB(mGamma_OmegaZBSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mIndices(mIndicesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vAlpha(vAlphaSEXP);
    rcpp_result_gen = Rcpp::wrap(dFoo(mGamma_OmegaZB, mIndices, vLambda, vAlpha));
    return rcpp_result_gen;
END_RCPP
}
// UnMapC
double UnMapC(double x, double L, double U);
RcppExport SEXP _hmminar_UnMapC(SEXP xSEXP, SEXP LSEXP, SEXP USEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type L(LSEXP);
    Rcpp::traits::input_parameter< double >::type U(USEXP);
    rcpp_result_gen = Rcpp::wrap(UnMapC(x, L, U));
    return rcpp_result_gen;
END_RCPP
}
// mapC_v
arma::vec mapC_v(arma::vec x, double L, double U);
RcppExport SEXP _hmminar_mapC_v(SEXP xSEXP, SEXP LSEXP, SEXP USEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type L(LSEXP);
    Rcpp::traits::input_parameter< double >::type U(USEXP);
    rcpp_result_gen = Rcpp::wrap(mapC_v(x, L, U));
    return rcpp_result_gen;
END_RCPP
}
// UnmapC_v
arma::vec UnmapC_v(arma::vec x, double L, double U);
RcppExport SEXP _hmminar_UnmapC_v(SEXP xSEXP, SEXP LSEXP, SEXP USEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type L(LSEXP);
    Rcpp::traits::input_parameter< double >::type U(USEXP);
    rcpp_result_gen = Rcpp::wrap(UnmapC_v(x, L, U));
    return rcpp_result_gen;
END_RCPP
}
// SimplexMapping
arma::vec SimplexMapping(arma::vec vOmega_tilde, int M);
RcppExport SEXP _hmminar_SimplexMapping(SEXP vOmega_tildeSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vOmega_tilde(vOmega_tildeSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(SimplexMapping(vOmega_tilde, M));
    return rcpp_result_gen;
END_RCPP
}
// SimplexUnMapping
arma::vec SimplexUnMapping(arma::vec vOmega, int M);
RcppExport SEXP _hmminar_SimplexUnMapping(SEXP vOmegaSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(SimplexUnMapping(vOmega, M));
    return rcpp_result_gen;
END_RCPP
}
// Sim_MixInar
arma::vec Sim_MixInar(int iT, arma::vec vOmega, arma::vec vLambda, double dAlpha);
RcppExport SEXP _hmminar_Sim_MixInar(SEXP iTSEXP, SEXP vOmegaSEXP, SEXP vLambdaSEXP, SEXP dAlphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    rcpp_result_gen = Rcpp::wrap(Sim_MixInar(iT, vOmega, vLambda, dAlpha));
    return rcpp_result_gen;
END_RCPP
}
// Sim_MixInar_Seasonal
List Sim_MixInar_Seasonal(int iT, int iS, arma::vec vOmega, arma::vec vLambda, double dAlpha, arma::vec vEta);
RcppExport SEXP _hmminar_Sim_MixInar_Seasonal(SEXP iTSEXP, SEXP iSSEXP, SEXP vOmegaSEXP, SEXP vLambdaSEXP, SEXP dAlphaSEXP, SEXP vEtaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< int >::type iS(iSSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vEta(vEtaSEXP);
    rcpp_result_gen = Rcpp::wrap(Sim_MixInar_Seasonal(iT, iS, vOmega, vLambda, dAlpha, vEta));
    return rcpp_result_gen;
END_RCPP
}
// Sim_MixInar_Seasonal_Dummy
arma::vec Sim_MixInar_Seasonal_Dummy(int iT, arma::vec vOmega, arma::vec vLambda, double dAlpha, arma::vec vBeta, arma::mat mD);
RcppExport SEXP _hmminar_Sim_MixInar_Seasonal_Dummy(SEXP iTSEXP, SEXP vOmegaSEXP, SEXP vLambdaSEXP, SEXP dAlphaSEXP, SEXP vBetaSEXP, SEXP mDSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    rcpp_result_gen = Rcpp::wrap(Sim_MixInar_Seasonal_Dummy(iT, vOmega, vLambda, dAlpha, vBeta, mD));
    return rcpp_result_gen;
END_RCPP
}
// Filtering_MixInar_C
List Filtering_MixInar_C(arma::vec vY, int iJ, arma::vec vOmega, double dAlpha, arma::vec vLambda, arma::vec vBeta, arma::mat mD);
RcppExport SEXP _hmminar_Filtering_MixInar_C(SEXP vYSEXP, SEXP iJSEXP, SEXP vOmegaSEXP, SEXP dAlphaSEXP, SEXP vLambdaSEXP, SEXP vBetaSEXP, SEXP mDSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    rcpp_result_gen = Rcpp::wrap(Filtering_MixInar_C(vY, iJ, vOmega, dAlpha, vLambda, vBeta, mD));
    return rcpp_result_gen;
END_RCPP
}
// FilteringMedian_MixInar_C
List FilteringMedian_MixInar_C(arma::vec vY, int iJ, arma::vec vOmega, double dAlpha, arma::vec vLambda, arma::vec vBeta, arma::mat mD, int iB);
RcppExport SEXP _hmminar_FilteringMedian_MixInar_C(SEXP vYSEXP, SEXP iJSEXP, SEXP vOmegaSEXP, SEXP dAlphaSEXP, SEXP vLambdaSEXP, SEXP vBetaSEXP, SEXP mDSEXP, SEXP iBSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    Rcpp::traits::input_parameter< int >::type iB(iBSEXP);
    rcpp_result_gen = Rcpp::wrap(FilteringMedian_MixInar_C(vY, iJ, vOmega, dAlpha, vLambda, vBeta, mD, iB));
    return rcpp_result_gen;
END_RCPP
}
// Moments_C
List Moments_C(arma::mat PredictedProb, int iJ, int iL, arma::vec vMu, arma::vec vNu, arma::vec vOmega, arma::mat mGamma, arma::vec vBeta, arma::mat mD);
RcppExport SEXP _hmminar_Moments_C(SEXP PredictedProbSEXP, SEXP iJSEXP, SEXP iLSEXP, SEXP vMuSEXP, SEXP vNuSEXP, SEXP vOmegaSEXP, SEXP mGammaSEXP, SEXP vBetaSEXP, SEXP mDSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type PredictedProb(PredictedProbSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< int >::type iL(iLSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vMu(vMuSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNu(vNuSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    rcpp_result_gen = Rcpp::wrap(Moments_C(PredictedProb, iJ, iL, vMu, vNu, vOmega, mGamma, vBeta, mD));
    return rcpp_result_gen;
END_RCPP
}
// dNB
double dNB(double dY, double dDelta, double dBeta, bool bLog);
RcppExport SEXP _hmminar_dNB(SEXP dYSEXP, SEXP dDeltaSEXP, SEXP dBetaSEXP, SEXP bLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dDelta(dDeltaSEXP);
    Rcpp::traits::input_parameter< double >::type dBeta(dBetaSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    rcpp_result_gen = Rcpp::wrap(dNB(dY, dDelta, dBeta, bLog));
    return rcpp_result_gen;
END_RCPP
}
// pNB
double pNB(double dY, double dDelta, double dBeta, bool bLog);
RcppExport SEXP _hmminar_pNB(SEXP dYSEXP, SEXP dDeltaSEXP, SEXP dBetaSEXP, SEXP bLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dDelta(dDeltaSEXP);
    Rcpp::traits::input_parameter< double >::type dBeta(dBetaSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    rcpp_result_gen = Rcpp::wrap(pNB(dY, dDelta, dBeta, bLog));
    return rcpp_result_gen;
END_RCPP
}
// NBAR
List NBAR(arma::vec vY, double dBeta, double dDelta0, double dOmega0);
RcppExport SEXP _hmminar_NBAR(SEXP vYSEXP, SEXP dBetaSEXP, SEXP dDelta0SEXP, SEXP dOmega0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< double >::type dBeta(dBetaSEXP);
    Rcpp::traits::input_parameter< double >::type dDelta0(dDelta0SEXP);
    Rcpp::traits::input_parameter< double >::type dOmega0(dOmega0SEXP);
    rcpp_result_gen = Rcpp::wrap(NBAR(vY, dBeta, dDelta0, dOmega0));
    return rcpp_result_gen;
END_RCPP
}
// PNBAR
List PNBAR(arma::vec vY, double dBeta, double dDelta0, double dOmega0, double dOmega1, double dOmega2, int iS);
RcppExport SEXP _hmminar_PNBAR(SEXP vYSEXP, SEXP dBetaSEXP, SEXP dDelta0SEXP, SEXP dOmega0SEXP, SEXP dOmega1SEXP, SEXP dOmega2SEXP, SEXP iSSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< double >::type dBeta(dBetaSEXP);
    Rcpp::traits::input_parameter< double >::type dDelta0(dDelta0SEXP);
    Rcpp::traits::input_parameter< double >::type dOmega0(dOmega0SEXP);
    Rcpp::traits::input_parameter< double >::type dOmega1(dOmega1SEXP);
    Rcpp::traits::input_parameter< double >::type dOmega2(dOmega2SEXP);
    Rcpp::traits::input_parameter< int >::type iS(iSSEXP);
    rcpp_result_gen = Rcpp::wrap(PNBAR(vY, dBeta, dDelta0, dOmega0, dOmega1, dOmega2, iS));
    return rcpp_result_gen;
END_RCPP
}
// dNBin
double dNBin(double dY, double dN, double dP, bool bLog);
RcppExport SEXP _hmminar_dNBin(SEXP dYSEXP, SEXP dNSEXP, SEXP dPSEXP, SEXP bLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dN(dNSEXP);
    Rcpp::traits::input_parameter< double >::type dP(dPSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    rcpp_result_gen = Rcpp::wrap(dNBin(dY, dN, dP, bLog));
    return rcpp_result_gen;
END_RCPP
}
// pNBin
double pNBin(double dY, double dN, double dP, bool bLog);
RcppExport SEXP _hmminar_pNBin(SEXP dYSEXP, SEXP dNSEXP, SEXP dPSEXP, SEXP bLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dN(dNSEXP);
    Rcpp::traits::input_parameter< double >::type dP(dPSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    rcpp_result_gen = Rcpp::wrap(pNBin(dY, dN, dP, bLog));
    return rcpp_result_gen;
END_RCPP
}
// NBSoftplusSeasonalINGARCH_filter
List NBSoftplusSeasonalINGARCH_filter(arma::vec vY, double dM0, double dAlpha0, double dAlpha1, double dBeta1, arma::vec vDelta_S, int iS, double dC, double dP);
RcppExport SEXP _hmminar_NBSoftplusSeasonalINGARCH_filter(SEXP vYSEXP, SEXP dM0SEXP, SEXP dAlpha0SEXP, SEXP dAlpha1SEXP, SEXP dBeta1SEXP, SEXP vDelta_SSEXP, SEXP iSSEXP, SEXP dCSEXP, SEXP dPSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< double >::type dM0(dM0SEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha0(dAlpha0SEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha1(dAlpha1SEXP);
    Rcpp::traits::input_parameter< double >::type dBeta1(dBeta1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vDelta_S(vDelta_SSEXP);
    Rcpp::traits::input_parameter< int >::type iS(iSSEXP);
    Rcpp::traits::input_parameter< double >::type dC(dCSEXP);
    Rcpp::traits::input_parameter< double >::type dP(dPSEXP);
    rcpp_result_gen = Rcpp::wrap(NBSoftplusSeasonalINGARCH_filter(vY, dM0, dAlpha0, dAlpha1, dBeta1, vDelta_S, iS, dC, dP));
    return rcpp_result_gen;
END_RCPP
}
// NBSoftplusSeasonalINGARCH_DummySeason_filter
List NBSoftplusSeasonalINGARCH_DummySeason_filter(arma::vec vY, double dM0, double dAlpha0, double dAlpha1, double dBeta1, arma::vec vSeason, arma::vec vBeta_s, double dC, double dP);
RcppExport SEXP _hmminar_NBSoftplusSeasonalINGARCH_DummySeason_filter(SEXP vYSEXP, SEXP dM0SEXP, SEXP dAlpha0SEXP, SEXP dAlpha1SEXP, SEXP dBeta1SEXP, SEXP vSeasonSEXP, SEXP vBeta_sSEXP, SEXP dCSEXP, SEXP dPSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< double >::type dM0(dM0SEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha0(dAlpha0SEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha1(dAlpha1SEXP);
    Rcpp::traits::input_parameter< double >::type dBeta1(dBeta1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vSeason(vSeasonSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta_s(vBeta_sSEXP);
    Rcpp::traits::input_parameter< double >::type dC(dCSEXP);
    Rcpp::traits::input_parameter< double >::type dP(dPSEXP);
    rcpp_result_gen = Rcpp::wrap(NBSoftplusSeasonalINGARCH_DummySeason_filter(vY, dM0, dAlpha0, dAlpha1, dBeta1, vSeason, vBeta_s, dC, dP));
    return rcpp_result_gen;
END_RCPP
}
// dNegBin
double dNegBin(double dY, double dN, double dP, bool bLog);
RcppExport SEXP _hmminar_dNegBin(SEXP dYSEXP, SEXP dNSEXP, SEXP dPSEXP, SEXP bLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dN(dNSEXP);
    Rcpp::traits::input_parameter< double >::type dP(dPSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    rcpp_result_gen = Rcpp::wrap(dNegBin(dY, dN, dP, bLog));
    return rcpp_result_gen;
END_RCPP
}
// rlogarithmic
double rlogarithmic(double p);
RcppExport SEXP _hmminar_rlogarithmic(SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(rlogarithmic(p));
    return rcpp_result_gen;
END_RCPP
}
// rNegBin
double rNegBin(double dN, double dP);
RcppExport SEXP _hmminar_rNegBin(SEXP dNSEXP, SEXP dPSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dN(dNSEXP);
    Rcpp::traits::input_parameter< double >::type dP(dPSEXP);
    rcpp_result_gen = Rcpp::wrap(rNegBin(dN, dP));
    return rcpp_result_gen;
END_RCPP
}
// dNeyman2
double dNeyman2(double dY, double dNu, double dMu, bool bLog, int iTrunc);
RcppExport SEXP _hmminar_dNeyman2(SEXP dYSEXP, SEXP dNuSEXP, SEXP dMuSEXP, SEXP bLogSEXP, SEXP iTruncSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dNu(dNuSEXP);
    Rcpp::traits::input_parameter< double >::type dMu(dMuSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    Rcpp::traits::input_parameter< int >::type iTrunc(iTruncSEXP);
    rcpp_result_gen = Rcpp::wrap(dNeyman2(dY, dNu, dMu, bLog, iTrunc));
    return rcpp_result_gen;
END_RCPP
}
// dNeyman
double dNeyman(double dY, double dNu, double dMu, bool bLog, int iTrunc);
RcppExport SEXP _hmminar_dNeyman(SEXP dYSEXP, SEXP dNuSEXP, SEXP dMuSEXP, SEXP bLogSEXP, SEXP iTruncSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dNu(dNuSEXP);
    Rcpp::traits::input_parameter< double >::type dMu(dMuSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    Rcpp::traits::input_parameter< int >::type iTrunc(iTruncSEXP);
    rcpp_result_gen = Rcpp::wrap(dNeyman(dY, dNu, dMu, bLog, iTrunc));
    return rcpp_result_gen;
END_RCPP
}
// rNeyman
double rNeyman(double dNu, double dMu);
RcppExport SEXP _hmminar_rNeyman(SEXP dNuSEXP, SEXP dMuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dNu(dNuSEXP);
    Rcpp::traits::input_parameter< double >::type dMu(dMuSEXP);
    rcpp_result_gen = Rcpp::wrap(rNeyman(dNu, dMu));
    return rcpp_result_gen;
END_RCPP
}
// dPB2
double dPB2(double dY, double dX, double dAlpha, double dLambda, arma::vec vLogFactorial_K, bool bLog);
RcppExport SEXP _hmminar_dPB2(SEXP dYSEXP, SEXP dXSEXP, SEXP dAlphaSEXP, SEXP dLambdaSEXP, SEXP vLogFactorial_KSEXP, SEXP bLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dX(dXSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< double >::type dLambda(dLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    rcpp_result_gen = Rcpp::wrap(dPB2(dY, dX, dAlpha, dLambda, vLogFactorial_K, bLog));
    return rcpp_result_gen;
END_RCPP
}
// dPB
double dPB(double dY, double dX, double dAlpha, double dLambda, arma::vec vLogFactorial_K, bool bLog);
RcppExport SEXP _hmminar_dPB(SEXP dYSEXP, SEXP dXSEXP, SEXP dAlphaSEXP, SEXP dLambdaSEXP, SEXP vLogFactorial_KSEXP, SEXP bLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dX(dXSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< double >::type dLambda(dLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    rcpp_result_gen = Rcpp::wrap(dPB(dY, dX, dAlpha, dLambda, vLogFactorial_K, bLog));
    return rcpp_result_gen;
END_RCPP
}
// dMixPB
double dMixPB(double dY, double dX, double dAlpha, arma::vec vLambda, arma::vec vOmega, arma::vec vLogFactorial_K, bool bLog);
RcppExport SEXP _hmminar_dMixPB(SEXP dYSEXP, SEXP dXSEXP, SEXP dAlphaSEXP, SEXP vLambdaSEXP, SEXP vOmegaSEXP, SEXP vLogFactorial_KSEXP, SEXP bLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dX(dXSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    rcpp_result_gen = Rcpp::wrap(dMixPB(dY, dX, dAlpha, vLambda, vOmega, vLogFactorial_K, bLog));
    return rcpp_result_gen;
END_RCPP
}
// pPB
double pPB(double dY, double dX, double dAlpha, double dLambda, arma::vec vLogFactorial_K, bool bLog);
RcppExport SEXP _hmminar_pPB(SEXP dYSEXP, SEXP dXSEXP, SEXP dAlphaSEXP, SEXP dLambdaSEXP, SEXP vLogFactorial_KSEXP, SEXP bLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dX(dXSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< double >::type dLambda(dLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    rcpp_result_gen = Rcpp::wrap(pPB(dY, dX, dAlpha, dLambda, vLogFactorial_K, bLog));
    return rcpp_result_gen;
END_RCPP
}
// pMixPB
double pMixPB(double dY, double dX, double dAlpha, arma::vec vLambda, arma::vec vOmega, arma::vec vLogFactorial_K, bool bLog);
RcppExport SEXP _hmminar_pMixPB(SEXP dYSEXP, SEXP dXSEXP, SEXP dAlphaSEXP, SEXP vLambdaSEXP, SEXP vOmegaSEXP, SEXP vLogFactorial_KSEXP, SEXP bLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dX(dXSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    rcpp_result_gen = Rcpp::wrap(pMixPB(dY, dX, dAlpha, vLambda, vOmega, vLogFactorial_K, bLog));
    return rcpp_result_gen;
END_RCPP
}
// dLLK_MixPB
double dLLK_MixPB(arma::vec vY, arma::vec vLambda, arma::vec vOmega, arma::vec vLogFactorial_K, double dAlpha, int iT, int iJ);
RcppExport SEXP _hmminar_dLLK_MixPB(SEXP vYSEXP, SEXP vLambdaSEXP, SEXP vOmegaSEXP, SEXP vLogFactorial_KSEXP, SEXP dAlphaSEXP, SEXP iTSEXP, SEXP iJSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    rcpp_result_gen = Rcpp::wrap(dLLK_MixPB(vY, vLambda, vOmega, vLogFactorial_K, dAlpha, iT, iJ));
    return rcpp_result_gen;
END_RCPP
}
// dLLK_MixPB_seasonal
List dLLK_MixPB_seasonal(arma::vec vY, arma::vec vLambda, arma::vec vOmega, arma::vec vEta, arma::vec vLogFactorial_K, double dAlpha, int iT, int iJ, int iS);
RcppExport SEXP _hmminar_dLLK_MixPB_seasonal(SEXP vYSEXP, SEXP vLambdaSEXP, SEXP vOmegaSEXP, SEXP vEtaSEXP, SEXP vLogFactorial_KSEXP, SEXP dAlphaSEXP, SEXP iTSEXP, SEXP iJSEXP, SEXP iSSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vEta(vEtaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< int >::type iS(iSSEXP);
    rcpp_result_gen = Rcpp::wrap(dLLK_MixPB_seasonal(vY, vLambda, vOmega, vEta, vLogFactorial_K, dAlpha, iT, iJ, iS));
    return rcpp_result_gen;
END_RCPP
}
// dSumThreeBinom
double dSumThreeBinom(double dY, arma::vec vK, arma::vec vPi, bool bLog);
RcppExport SEXP _hmminar_dSumThreeBinom(SEXP dYSEXP, SEXP vKSEXP, SEXP vPiSEXP, SEXP bLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vK(vKSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    rcpp_result_gen = Rcpp::wrap(dSumThreeBinom(dY, vK, vPi, bLog));
    return rcpp_result_gen;
END_RCPP
}
// dSumThreeBinom_Eff
double dSumThreeBinom_Eff(double dY, arma::vec vK, arma::vec vPi, arma::vec vLogFactorial_K, bool bLog);
RcppExport SEXP _hmminar_dSumThreeBinom_Eff(SEXP dYSEXP, SEXP vKSEXP, SEXP vPiSEXP, SEXP vLogFactorial_KSEXP, SEXP bLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vK(vKSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    rcpp_result_gen = Rcpp::wrap(dSumThreeBinom_Eff(dY, vK, vPi, vLogFactorial_K, bLog));
    return rcpp_result_gen;
END_RCPP
}
// dSumThreeBinom_Approx
double dSumThreeBinom_Approx(double dY, arma::vec vK, arma::vec vPi, bool bLog);
RcppExport SEXP _hmminar_dSumThreeBinom_Approx(SEXP dYSEXP, SEXP vKSEXP, SEXP vPiSEXP, SEXP bLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vK(vKSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    rcpp_result_gen = Rcpp::wrap(dSumThreeBinom_Approx(dY, vK, vPi, bLog));
    return rcpp_result_gen;
END_RCPP
}
// dSumMixThreeBinom
double dSumMixThreeBinom(double dY, double dK, arma::vec vPi, arma::vec vOmega, arma::vec vLogFactorial_K, bool bLog);
RcppExport SEXP _hmminar_dSumMixThreeBinom(SEXP dYSEXP, SEXP dKSEXP, SEXP vPiSEXP, SEXP vOmegaSEXP, SEXP vLogFactorial_KSEXP, SEXP bLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dK(dKSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    rcpp_result_gen = Rcpp::wrap(dSumMixThreeBinom(dY, dK, vPi, vOmega, vLogFactorial_K, bLog));
    return rcpp_result_gen;
END_RCPP
}
// dSumMixThreeBinom_Approx
double dSumMixThreeBinom_Approx(double dY, double dK, arma::vec vPi, arma::vec vOmega, arma::vec vLogFactorial_K, bool bLog);
RcppExport SEXP _hmminar_dSumMixThreeBinom_Approx(SEXP dYSEXP, SEXP dKSEXP, SEXP vPiSEXP, SEXP vOmegaSEXP, SEXP vLogFactorial_KSEXP, SEXP bLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dK(dKSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    rcpp_result_gen = Rcpp::wrap(dSumMixThreeBinom_Approx(dY, dK, vPi, vOmega, vLogFactorial_K, bLog));
    return rcpp_result_gen;
END_RCPP
}
// dSumMixThreeBinom_foo
arma::mat dSumMixThreeBinom_foo(double dY, double dK, arma::vec vPi, arma::vec vOmega, arma::vec vLogFactorial_K, bool bLog);
RcppExport SEXP _hmminar_dSumMixThreeBinom_foo(SEXP dYSEXP, SEXP dKSEXP, SEXP vPiSEXP, SEXP vOmegaSEXP, SEXP vLogFactorial_KSEXP, SEXP bLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dK(dKSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    rcpp_result_gen = Rcpp::wrap(dSumMixThreeBinom_foo(dY, dK, vPi, vOmega, vLogFactorial_K, bLog));
    return rcpp_result_gen;
END_RCPP
}
// dPoissonSumMixThreeBinom
double dPoissonSumMixThreeBinom(double dY, double dLambda, arma::vec vPi, arma::vec vOmega, bool bLog);
RcppExport SEXP _hmminar_dPoissonSumMixThreeBinom(SEXP dYSEXP, SEXP dLambdaSEXP, SEXP vPiSEXP, SEXP vOmegaSEXP, SEXP bLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dLambda(dLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    rcpp_result_gen = Rcpp::wrap(dPoissonSumMixThreeBinom(dY, dLambda, vPi, vOmega, bLog));
    return rcpp_result_gen;
END_RCPP
}
// dLLKPoissonSumMixThreeBinom
double dLLKPoissonSumMixThreeBinom(arma::vec vY, double dLambda, arma::vec vPi, arma::vec vOmega, arma::vec vLogFactorial_K, int iT, int iMax, int iCores);
RcppExport SEXP _hmminar_dLLKPoissonSumMixThreeBinom(SEXP vYSEXP, SEXP dLambdaSEXP, SEXP vPiSEXP, SEXP vOmegaSEXP, SEXP vLogFactorial_KSEXP, SEXP iTSEXP, SEXP iMaxSEXP, SEXP iCoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< double >::type dLambda(dLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< int >::type iMax(iMaxSEXP);
    Rcpp::traits::input_parameter< int >::type iCores(iCoresSEXP);
    rcpp_result_gen = Rcpp::wrap(dLLKPoissonSumMixThreeBinom(vY, dLambda, vPi, vOmega, vLogFactorial_K, iT, iMax, iCores));
    return rcpp_result_gen;
END_RCPP
}
// dLLKPoissonSumMixThreeBinom_fast
double dLLKPoissonSumMixThreeBinom_fast(arma::vec vY, double dLambda, arma::vec vPi, arma::vec vOmega, arma::vec vLogFactorial_K, int iT, int iMax, int iCores);
RcppExport SEXP _hmminar_dLLKPoissonSumMixThreeBinom_fast(SEXP vYSEXP, SEXP dLambdaSEXP, SEXP vPiSEXP, SEXP vOmegaSEXP, SEXP vLogFactorial_KSEXP, SEXP iTSEXP, SEXP iMaxSEXP, SEXP iCoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< double >::type dLambda(dLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< int >::type iMax(iMaxSEXP);
    Rcpp::traits::input_parameter< int >::type iCores(iCoresSEXP);
    rcpp_result_gen = Rcpp::wrap(dLLKPoissonSumMixThreeBinom_fast(vY, dLambda, vPi, vOmega, vLogFactorial_K, iT, iMax, iCores));
    return rcpp_result_gen;
END_RCPP
}
// dLLKSumMixThreeBinom
double dLLKSumMixThreeBinom(arma::vec vY, double dK, arma::vec vPi, arma::vec vOmega, arma::vec vLogFactorial_K, int iT);
RcppExport SEXP _hmminar_dLLKSumMixThreeBinom(SEXP vYSEXP, SEXP dKSEXP, SEXP vPiSEXP, SEXP vOmegaSEXP, SEXP vLogFactorial_KSEXP, SEXP iTSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< double >::type dK(dKSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    rcpp_result_gen = Rcpp::wrap(dLLKSumMixThreeBinom(vY, dK, vPi, vOmega, vLogFactorial_K, iT));
    return rcpp_result_gen;
END_RCPP
}
// rSumMixThreeBinom
arma::vec rSumMixThreeBinom(int iT, double dK, arma::vec vPi, arma::vec vOmega);
RcppExport SEXP _hmminar_rSumMixThreeBinom(SEXP iTSEXP, SEXP dKSEXP, SEXP vPiSEXP, SEXP vOmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< double >::type dK(dKSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(rSumMixThreeBinom(iT, dK, vPi, vOmega));
    return rcpp_result_gen;
END_RCPP
}
// rPoissonSumMixThreeBinom
arma::vec rPoissonSumMixThreeBinom(int iT, double dLambda, arma::vec vPi, arma::vec vOmega);
RcppExport SEXP _hmminar_rPoissonSumMixThreeBinom(SEXP iTSEXP, SEXP dLambdaSEXP, SEXP vPiSEXP, SEXP vOmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< double >::type dLambda(dLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(rPoissonSumMixThreeBinom(iT, dLambda, vPi, vOmega));
    return rcpp_result_gen;
END_RCPP
}
// f_i
double f_i(double di, double dY, double dK, double dOmega, arma::vec vPi, arma::vec vQ, double dConst);
RcppExport SEXP _hmminar_f_i(SEXP diSEXP, SEXP dYSEXP, SEXP dKSEXP, SEXP dOmegaSEXP, SEXP vPiSEXP, SEXP vQSEXP, SEXP dConstSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type di(diSEXP);
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dK(dKSEXP);
    Rcpp::traits::input_parameter< double >::type dOmega(dOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vQ(vQSEXP);
    Rcpp::traits::input_parameter< double >::type dConst(dConstSEXP);
    rcpp_result_gen = Rcpp::wrap(f_i(di, dY, dK, dOmega, vPi, vQ, dConst));
    return rcpp_result_gen;
END_RCPP
}
// find_iMax
double find_iMax(double dY, double dK, double dOmega, arma::vec vPi, arma::vec vQ, double dConst, double dLower, double dUpper, int maxiter, double eps);
RcppExport SEXP _hmminar_find_iMax(SEXP dYSEXP, SEXP dKSEXP, SEXP dOmegaSEXP, SEXP vPiSEXP, SEXP vQSEXP, SEXP dConstSEXP, SEXP dLowerSEXP, SEXP dUpperSEXP, SEXP maxiterSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dK(dKSEXP);
    Rcpp::traits::input_parameter< double >::type dOmega(dOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vQ(vQSEXP);
    Rcpp::traits::input_parameter< double >::type dConst(dConstSEXP);
    Rcpp::traits::input_parameter< double >::type dLower(dLowerSEXP);
    Rcpp::traits::input_parameter< double >::type dUpper(dUpperSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(find_iMax(dY, dK, dOmega, vPi, vQ, dConst, dLower, dUpper, maxiter, eps));
    return rcpp_result_gen;
END_RCPP
}
// dSumMixTwoBinom
double dSumMixTwoBinom(double dY, double dK, arma::vec vPi, double dOmega, arma::vec vLogFactorial_K, bool bLog);
RcppExport SEXP _hmminar_dSumMixTwoBinom(SEXP dYSEXP, SEXP dKSEXP, SEXP vPiSEXP, SEXP dOmegaSEXP, SEXP vLogFactorial_KSEXP, SEXP bLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dK(dKSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< double >::type dOmega(dOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    rcpp_result_gen = Rcpp::wrap(dSumMixTwoBinom(dY, dK, vPi, dOmega, vLogFactorial_K, bLog));
    return rcpp_result_gen;
END_RCPP
}
// dSumMixTwoBinom_Eff
double dSumMixTwoBinom_Eff(double dY, double dK, arma::vec vPi, double dOmega, arma::vec vLogFactorial_K, bool bLog, double dTol_Log);
RcppExport SEXP _hmminar_dSumMixTwoBinom_Eff(SEXP dYSEXP, SEXP dKSEXP, SEXP vPiSEXP, SEXP dOmegaSEXP, SEXP vLogFactorial_KSEXP, SEXP bLogSEXP, SEXP dTol_LogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dK(dKSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< double >::type dOmega(dOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    Rcpp::traits::input_parameter< double >::type dTol_Log(dTol_LogSEXP);
    rcpp_result_gen = Rcpp::wrap(dSumMixTwoBinom_Eff(dY, dK, vPi, dOmega, vLogFactorial_K, bLog, dTol_Log));
    return rcpp_result_gen;
END_RCPP
}
// dSumMixTwoBinom_foo
arma::vec dSumMixTwoBinom_foo(double dY, double dK, arma::vec vPi, double dOmega, arma::vec vLogFactorial_K, bool bLog);
RcppExport SEXP _hmminar_dSumMixTwoBinom_foo(SEXP dYSEXP, SEXP dKSEXP, SEXP vPiSEXP, SEXP dOmegaSEXP, SEXP vLogFactorial_KSEXP, SEXP bLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dK(dKSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< double >::type dOmega(dOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    rcpp_result_gen = Rcpp::wrap(dSumMixTwoBinom_foo(dY, dK, vPi, dOmega, vLogFactorial_K, bLog));
    return rcpp_result_gen;
END_RCPP
}
// dLLKPoissonSumMixTwoBinom
double dLLKPoissonSumMixTwoBinom(arma::vec vY, double dLambda, arma::vec vPi, double dOmega, arma::vec vLogFactorial_K, int iT, int iMax, int iCores);
RcppExport SEXP _hmminar_dLLKPoissonSumMixTwoBinom(SEXP vYSEXP, SEXP dLambdaSEXP, SEXP vPiSEXP, SEXP dOmegaSEXP, SEXP vLogFactorial_KSEXP, SEXP iTSEXP, SEXP iMaxSEXP, SEXP iCoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< double >::type dLambda(dLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< double >::type dOmega(dOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< int >::type iMax(iMaxSEXP);
    Rcpp::traits::input_parameter< int >::type iCores(iCoresSEXP);
    rcpp_result_gen = Rcpp::wrap(dLLKPoissonSumMixTwoBinom(vY, dLambda, vPi, dOmega, vLogFactorial_K, iT, iMax, iCores));
    return rcpp_result_gen;
END_RCPP
}
// rSumMixTwoBinom
arma::vec rSumMixTwoBinom(int iT, double dK, arma::vec vPi, double dOmega);
RcppExport SEXP _hmminar_rSumMixTwoBinom(SEXP iTSEXP, SEXP dKSEXP, SEXP vPiSEXP, SEXP dOmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< double >::type dK(dKSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< double >::type dOmega(dOmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(rSumMixTwoBinom(iT, dK, vPi, dOmega));
    return rcpp_result_gen;
END_RCPP
}
// rNBSumMixTwoBinom
arma::vec rNBSumMixTwoBinom(int iT, double dA, double dB, arma::vec vPi, double dOmega);
RcppExport SEXP _hmminar_rNBSumMixTwoBinom(SEXP iTSEXP, SEXP dASEXP, SEXP dBSEXP, SEXP vPiSEXP, SEXP dOmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< double >::type dA(dASEXP);
    Rcpp::traits::input_parameter< double >::type dB(dBSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< double >::type dOmega(dOmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(rNBSumMixTwoBinom(iT, dA, dB, vPi, dOmega));
    return rcpp_result_gen;
END_RCPP
}
// rPoissonSumMixTwoBinom_Seasonal
arma::vec rPoissonSumMixTwoBinom_Seasonal(int iT, int iS, arma::vec vEta, arma::vec vPi, double dOmega);
RcppExport SEXP _hmminar_rPoissonSumMixTwoBinom_Seasonal(SEXP iTSEXP, SEXP iSSEXP, SEXP vEtaSEXP, SEXP vPiSEXP, SEXP dOmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< int >::type iS(iSSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vEta(vEtaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< double >::type dOmega(dOmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(rPoissonSumMixTwoBinom_Seasonal(iT, iS, vEta, vPi, dOmega));
    return rcpp_result_gen;
END_RCPP
}
// dLLKPoissonSumMixTwoBinom_Seasonal_pre
Rcpp::List dLLKPoissonSumMixTwoBinom_Seasonal_pre(arma::vec vY, arma::vec vPi, double dOmega, arma::vec vEta, arma::vec vLogFactorial_K, int iT, int iS, int iMax);
RcppExport SEXP _hmminar_dLLKPoissonSumMixTwoBinom_Seasonal_pre(SEXP vYSEXP, SEXP vPiSEXP, SEXP dOmegaSEXP, SEXP vEtaSEXP, SEXP vLogFactorial_KSEXP, SEXP iTSEXP, SEXP iSSEXP, SEXP iMaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< double >::type dOmega(dOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vEta(vEtaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< int >::type iS(iSSEXP);
    Rcpp::traits::input_parameter< int >::type iMax(iMaxSEXP);
    rcpp_result_gen = Rcpp::wrap(dLLKPoissonSumMixTwoBinom_Seasonal_pre(vY, vPi, dOmega, vEta, vLogFactorial_K, iT, iS, iMax));
    return rcpp_result_gen;
END_RCPP
}
// dLLKPoissonSumMixTwoBinom_Seasonal
Rcpp::List dLLKPoissonSumMixTwoBinom_Seasonal(arma::vec vY, arma::vec vPi, double dOmega, arma::vec vEta, arma::vec vLogFactorial_K, int iT, int iS, int iMax);
RcppExport SEXP _hmminar_dLLKPoissonSumMixTwoBinom_Seasonal(SEXP vYSEXP, SEXP vPiSEXP, SEXP dOmegaSEXP, SEXP vEtaSEXP, SEXP vLogFactorial_KSEXP, SEXP iTSEXP, SEXP iSSEXP, SEXP iMaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< double >::type dOmega(dOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vEta(vEtaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< int >::type iS(iSSEXP);
    Rcpp::traits::input_parameter< int >::type iMax(iMaxSEXP);
    rcpp_result_gen = Rcpp::wrap(dLLKPoissonSumMixTwoBinom_Seasonal(vY, vPi, dOmega, vEta, vLogFactorial_K, iT, iS, iMax));
    return rcpp_result_gen;
END_RCPP
}
// dLLKNBSumMixTwoBinom
double dLLKNBSumMixTwoBinom(arma::vec vY, double dOmega, arma::vec vPi, double dA, double dB, arma::vec vLogFactorial_K, int iT, int iMax);
RcppExport SEXP _hmminar_dLLKNBSumMixTwoBinom(SEXP vYSEXP, SEXP dOmegaSEXP, SEXP vPiSEXP, SEXP dASEXP, SEXP dBSEXP, SEXP vLogFactorial_KSEXP, SEXP iTSEXP, SEXP iMaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< double >::type dOmega(dOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vPi(vPiSEXP);
    Rcpp::traits::input_parameter< double >::type dA(dASEXP);
    Rcpp::traits::input_parameter< double >::type dB(dBSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< int >::type iMax(iMaxSEXP);
    rcpp_result_gen = Rcpp::wrap(dLLKNBSumMixTwoBinom(vY, dOmega, vPi, dA, dB, vLogFactorial_K, iT, iMax));
    return rcpp_result_gen;
END_RCPP
}
// PIT_MixINAR
double PIT_MixINAR(double dU, double dY, double dX, double dAlpha, arma::vec vLambda, arma::vec vOmega, arma::vec vLogFactorial_K);
RcppExport SEXP _hmminar_PIT_MixINAR(SEXP dUSEXP, SEXP dYSEXP, SEXP dXSEXP, SEXP dAlphaSEXP, SEXP vLambdaSEXP, SEXP vOmegaSEXP, SEXP vLogFactorial_KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dU(dUSEXP);
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dX(dXSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    rcpp_result_gen = Rcpp::wrap(PIT_MixINAR(dU, dY, dX, dAlpha, vLambda, vOmega, vLogFactorial_K));
    return rcpp_result_gen;
END_RCPP
}
// AveragePIT_MixINAR
double AveragePIT_MixINAR(double dU, arma::vec vY, double dAlpha, arma::vec vLambda, arma::vec vOmega, arma::vec vBeta, arma::mat mD, arma::vec vLogFactorial_K);
RcppExport SEXP _hmminar_AveragePIT_MixINAR(SEXP dUSEXP, SEXP vYSEXP, SEXP dAlphaSEXP, SEXP vLambdaSEXP, SEXP vOmegaSEXP, SEXP vBetaSEXP, SEXP mDSEXP, SEXP vLogFactorial_KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dU(dUSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    rcpp_result_gen = Rcpp::wrap(AveragePIT_MixINAR(dU, vY, dAlpha, vLambda, vOmega, vBeta, mD, vLogFactorial_K));
    return rcpp_result_gen;
END_RCPP
}
// PIT_Bin_MixINAR
List PIT_Bin_MixINAR(int iB, arma::vec vY, double dAlpha, arma::vec vLambda, arma::vec vOmega, arma::vec vBeta, arma::mat mD, arma::vec vLogFactorial_K);
RcppExport SEXP _hmminar_PIT_Bin_MixINAR(SEXP iBSEXP, SEXP vYSEXP, SEXP dAlphaSEXP, SEXP vLambdaSEXP, SEXP vOmegaSEXP, SEXP vBetaSEXP, SEXP mDSEXP, SEXP vLogFactorial_KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iB(iBSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< double >::type dAlpha(dAlphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLambda(vLambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vLogFactorial_K(vLogFactorial_KSEXP);
    rcpp_result_gen = Rcpp::wrap(PIT_Bin_MixINAR(iB, vY, dAlpha, vLambda, vOmega, vBeta, mD, vLogFactorial_K));
    return rcpp_result_gen;
END_RCPP
}
// Gamma_enlarged
arma::mat Gamma_enlarged(arma::mat mGamma_Omega, arma::vec vOmega);
RcppExport SEXP _hmminar_Gamma_enlarged(SEXP mGamma_OmegaSEXP, SEXP vOmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mGamma_Omega(mGamma_OmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(Gamma_enlarged(mGamma_Omega, vOmega));
    return rcpp_result_gen;
END_RCPP
}
// vDelta_enlarged
arma::vec vDelta_enlarged(arma::vec vDelta, arma::vec vOmega);
RcppExport SEXP _hmminar_vDelta_enlarged(SEXP vDeltaSEXP, SEXP vOmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vDelta(vDeltaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(vDelta_enlarged(vDelta, vOmega));
    return rcpp_result_gen;
END_RCPP
}
// Indices
arma::mat Indices(int iJ, int iL);
RcppExport SEXP _hmminar_Indices(SEXP iJSEXP, SEXP iLSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< int >::type iL(iLSEXP);
    rcpp_result_gen = Rcpp::wrap(Indices(iJ, iL));
    return rcpp_result_gen;
END_RCPP
}
// Gamma_Enlarged_2
arma::mat Gamma_Enlarged_2(arma::mat mGamma_Eta, arma::mat mOmega, arma::mat mGamma_Alpha, arma::mat mIndices);
RcppExport SEXP _hmminar_Gamma_Enlarged_2(SEXP mGamma_EtaSEXP, SEXP mOmegaSEXP, SEXP mGamma_AlphaSEXP, SEXP mIndicesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mGamma_Eta(mGamma_EtaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mOmega(mOmegaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma_Alpha(mGamma_AlphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mIndices(mIndicesSEXP);
    rcpp_result_gen = Rcpp::wrap(Gamma_Enlarged_2(mGamma_Eta, mOmega, mGamma_Alpha, mIndices));
    return rcpp_result_gen;
END_RCPP
}
// Gamma_Enlarged_2_OmegaChain
arma::mat Gamma_Enlarged_2_OmegaChain(arma::mat mGamma_Eta, arma::mat mOmega, arma::mat mIndices);
RcppExport SEXP _hmminar_Gamma_Enlarged_2_OmegaChain(SEXP mGamma_EtaSEXP, SEXP mOmegaSEXP, SEXP mIndicesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mGamma_Eta(mGamma_EtaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mOmega(mOmegaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mIndices(mIndicesSEXP);
    rcpp_result_gen = Rcpp::wrap(Gamma_Enlarged_2_OmegaChain(mGamma_Eta, mOmega, mIndices));
    return rcpp_result_gen;
END_RCPP
}
// GammaCheck
arma::mat GammaCheck(arma::mat mGamma, int iJ);
RcppExport SEXP _hmminar_GammaCheck(SEXP mGammaSEXP, SEXP iJSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    rcpp_result_gen = Rcpp::wrap(GammaCheck(mGamma, iJ));
    return rcpp_result_gen;
END_RCPP
}
// OmegaCheck
arma::mat OmegaCheck(arma::mat mOmega, int iK, int iJ);
RcppExport SEXP _hmminar_OmegaCheck(SEXP mOmegaSEXP, SEXP iKSEXP, SEXP iJSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mOmega(mOmegaSEXP);
    Rcpp::traits::input_parameter< int >::type iK(iKSEXP);
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    rcpp_result_gen = Rcpp::wrap(OmegaCheck(mOmega, iK, iJ));
    return rcpp_result_gen;
END_RCPP
}
// MSSumMixPois_Sim
Rcpp::List MSSumMixPois_Sim(int iT, arma::vec vMu, arma::vec vNu, arma::vec vOmega, arma::mat mGamma);
RcppExport SEXP _hmminar_MSSumMixPois_Sim(SEXP iTSEXP, SEXP vMuSEXP, SEXP vNuSEXP, SEXP vOmegaSEXP, SEXP mGammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vMu(vMuSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNu(vNuSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    rcpp_result_gen = Rcpp::wrap(MSSumMixPois_Sim(iT, vMu, vNu, vOmega, mGamma));
    return rcpp_result_gen;
END_RCPP
}
// MSSumMixPois_Sim_Dummy
Rcpp::List MSSumMixPois_Sim_Dummy(int iT, arma::vec vMu, arma::vec vNu, arma::vec vOmega, arma::mat mGamma, arma::vec vBeta, arma::mat mD);
RcppExport SEXP _hmminar_MSSumMixPois_Sim_Dummy(SEXP iTSEXP, SEXP vMuSEXP, SEXP vNuSEXP, SEXP vOmegaSEXP, SEXP mGammaSEXP, SEXP vBetaSEXP, SEXP mDSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vMu(vMuSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNu(vNuSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vBeta(vBetaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mD(mDSEXP);
    rcpp_result_gen = Rcpp::wrap(MSSumMixPois_Sim_Dummy(iT, vMu, vNu, vOmega, mGamma, vBeta, mD));
    return rcpp_result_gen;
END_RCPP
}
// StirlingNumber
int StirlingNumber(int iN, int iM);
RcppExport SEXP _hmminar_StirlingNumber(SEXP iNSEXP, SEXP iMSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iN(iNSEXP);
    Rcpp::traits::input_parameter< int >::type iM(iMSEXP);
    rcpp_result_gen = Rcpp::wrap(StirlingNumber(iN, iM));
    return rcpp_result_gen;
END_RCPP
}
// dStirling
double dStirling(double dY, double dM, double dTheta, bool bLog);
RcppExport SEXP _hmminar_dStirling(SEXP dYSEXP, SEXP dMSEXP, SEXP dThetaSEXP, SEXP bLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< double >::type dM(dMSEXP);
    Rcpp::traits::input_parameter< double >::type dTheta(dThetaSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    rcpp_result_gen = Rcpp::wrap(dStirling(dY, dM, dTheta, bLog));
    return rcpp_result_gen;
END_RCPP
}
// dSumMixPois
double dSumMixPois(double dY, arma::vec vOmega, arma::vec vNu, double dMu, bool bLog, int iTrunc);
RcppExport SEXP _hmminar_dSumMixPois(SEXP dYSEXP, SEXP vOmegaSEXP, SEXP vNuSEXP, SEXP dMuSEXP, SEXP bLogSEXP, SEXP iTruncSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dY(dYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNu(vNuSEXP);
    Rcpp::traits::input_parameter< double >::type dMu(dMuSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    Rcpp::traits::input_parameter< int >::type iTrunc(iTruncSEXP);
    rcpp_result_gen = Rcpp::wrap(dSumMixPois(dY, vOmega, vNu, dMu, bLog, iTrunc));
    return rcpp_result_gen;
END_RCPP
}
// dLLK_SumMixPois
double dLLK_SumMixPois(arma::vec vY, arma::vec vOmega, arma::vec vNu, double dMu);
RcppExport SEXP _hmminar_dLLK_SumMixPois(SEXP vYSEXP, SEXP vOmegaSEXP, SEXP vNuSEXP, SEXP dMuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vY(vYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNu(vNuSEXP);
    Rcpp::traits::input_parameter< double >::type dMu(dMuSEXP);
    rcpp_result_gen = Rcpp::wrap(dLLK_SumMixPois(vY, vOmega, vNu, dMu));
    return rcpp_result_gen;
END_RCPP
}
// rSumMixPois
double rSumMixPois(arma::vec vOmega, arma::vec vNu, double dMu);
RcppExport SEXP _hmminar_rSumMixPois(SEXP vOmegaSEXP, SEXP vNuSEXP, SEXP dMuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vOmega(vOmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vNu(vNuSEXP);
    Rcpp::traits::input_parameter< double >::type dMu(dMuSEXP);
    rcpp_result_gen = Rcpp::wrap(rSumMixPois(vOmega, vNu, dMu));
    return rcpp_result_gen;
END_RCPP
}
// MixtDensityScale
double MixtDensityScale(arma::vec vOmega_log, arma::vec vD_log);
RcppExport SEXP _hmminar_MixtDensityScale(SEXP vOmega_logSEXP, SEXP vD_logSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vOmega_log(vOmega_logSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vD_log(vD_logSEXP);
    rcpp_result_gen = Rcpp::wrap(MixtDensityScale(vOmega_log, vD_log));
    return rcpp_result_gen;
END_RCPP
}
// LogSumExp
double LogSumExp(arma::vec vLog);
RcppExport SEXP _hmminar_LogSumExp(SEXP vLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vLog(vLogSEXP);
    rcpp_result_gen = Rcpp::wrap(LogSumExp(vLog));
    return rcpp_result_gen;
END_RCPP
}
// getDelta
arma::vec getDelta(arma::mat gamma, int m);
RcppExport SEXP _hmminar_getDelta(SEXP gammaSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(getDelta(gamma, m));
    return rcpp_result_gen;
END_RCPP
}
// LW
double LW(double x, double tolerance, int maxit);
RcppExport SEXP _hmminar_LW(SEXP xSEXP, SEXP toleranceSEXP, SEXP maxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    rcpp_result_gen = Rcpp::wrap(LW(x, tolerance, maxit));
    return rcpp_result_gen;
END_RCPP
}
// OmegaZB_Indices
arma::mat OmegaZB_Indices(int iJ, int iK, int iL);
RcppExport SEXP _hmminar_OmegaZB_Indices(SEXP iJSEXP, SEXP iKSEXP, SEXP iLSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type iJ(iJSEXP);
    Rcpp::traits::input_parameter< int >::type iK(iKSEXP);
    Rcpp::traits::input_parameter< int >::type iL(iLSEXP);
    rcpp_result_gen = Rcpp::wrap(OmegaZB_Indices(iJ, iK, iL));
    return rcpp_result_gen;
END_RCPP
}
// BoundProbs
arma::vec BoundProbs(arma::vec vP, double probbound);
RcppExport SEXP _hmminar_BoundProbs(SEXP vPSEXP, SEXP probboundSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vP(vPSEXP);
    Rcpp::traits::input_parameter< double >::type probbound(probboundSEXP);
    rcpp_result_gen = Rcpp::wrap(BoundProbs(vP, probbound));
    return rcpp_result_gen;
END_RCPP
}
// BoundGamma
arma::mat BoundGamma(arma::mat mGamma, double probbound);
RcppExport SEXP _hmminar_BoundGamma(SEXP mGammaSEXP, SEXP probboundSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type mGamma(mGammaSEXP);
    Rcpp::traits::input_parameter< double >::type probbound(probboundSEXP);
    rcpp_result_gen = Rcpp::wrap(BoundGamma(mGamma, probbound));
    return rcpp_result_gen;
END_RCPP
}
// dZTNB
double dZTNB(double dV, double dA, double dB, bool bLog);
RcppExport SEXP _hmminar_dZTNB(SEXP dVSEXP, SEXP dASEXP, SEXP dBSEXP, SEXP bLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dV(dVSEXP);
    Rcpp::traits::input_parameter< double >::type dA(dASEXP);
    Rcpp::traits::input_parameter< double >::type dB(dBSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    rcpp_result_gen = Rcpp::wrap(dZTNB(dV, dA, dB, bLog));
    return rcpp_result_gen;
END_RCPP
}
// dSumZTNB
double dSumZTNB(double dV, double dN, double dA, double dB, bool bLog);
RcppExport SEXP _hmminar_dSumZTNB(SEXP dVSEXP, SEXP dNSEXP, SEXP dASEXP, SEXP dBSEXP, SEXP bLogSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dV(dVSEXP);
    Rcpp::traits::input_parameter< double >::type dN(dNSEXP);
    Rcpp::traits::input_parameter< double >::type dA(dASEXP);
    Rcpp::traits::input_parameter< double >::type dB(dBSEXP);
    Rcpp::traits::input_parameter< bool >::type bLog(bLogSEXP);
    rcpp_result_gen = Rcpp::wrap(dSumZTNB(dV, dN, dA, dB, bLog));
    return rcpp_result_gen;
END_RCPP
}
// dLLK_SumZTNB
double dLLK_SumZTNB(arma::vec vV, arma::vec vN, double dA, double dB);
RcppExport SEXP _hmminar_dLLK_SumZTNB(SEXP vVSEXP, SEXP vNSEXP, SEXP dASEXP, SEXP dBSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type vV(vVSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type vN(vNSEXP);
    Rcpp::traits::input_parameter< double >::type dA(dASEXP);
    Rcpp::traits::input_parameter< double >::type dB(dBSEXP);
    rcpp_result_gen = Rcpp::wrap(dLLK_SumZTNB(vV, vN, dA, dB));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_hmminar_dCNegBin", (DL_FUNC) &_hmminar_dCNegBin, 6},
    {"_hmminar_dLLK_cNegBin", (DL_FUNC) &_hmminar_dLLK_cNegBin, 4},
    {"_hmminar_EM_CNegBin", (DL_FUNC) &_hmminar_EM_CNegBin, 3},
    {"_hmminar_EM_MSSumMixPois", (DL_FUNC) &_hmminar_EM_MSSumMixPois, 9},
    {"_hmminar_EM_MSSumMixPois_Dummy", (DL_FUNC) &_hmminar_EM_MSSumMixPois_Dummy, 11},
    {"_hmminar_EMInar", (DL_FUNC) &_hmminar_EMInar, 4},
    {"_hmminar_EMMixInar", (DL_FUNC) &_hmminar_EMMixInar, 8},
    {"_hmminar_EMMixInar_Seasonal", (DL_FUNC) &_hmminar_EMMixInar_Seasonal, 10},
    {"_hmminar_EMMixInar_Seasonal2", (DL_FUNC) &_hmminar_EMMixInar_Seasonal2, 10},
    {"_hmminar_EMMixInarP_Seasonal", (DL_FUNC) &_hmminar_EMMixInarP_Seasonal, 10},
    {"_hmminar_dPOI", (DL_FUNC) &_hmminar_dPOI, 3},
    {"_hmminar_EM_Mixture_Pois", (DL_FUNC) &_hmminar_EM_Mixture_Pois, 4},
    {"_hmminar_EM_NegBin", (DL_FUNC) &_hmminar_EM_NegBin, 3},
    {"_hmminar_EM_Neyman", (DL_FUNC) &_hmminar_EM_Neyman, 3},
    {"_hmminar_EM_SumMixPois", (DL_FUNC) &_hmminar_EM_SumMixPois, 7},
    {"_hmminar_FFBS", (DL_FUNC) &_hmminar_FFBS, 5},
    {"_hmminar_FFBS_robust", (DL_FUNC) &_hmminar_FFBS_robust, 5},
    {"_hmminar_EM_MSMixInar", (DL_FUNC) &_hmminar_EM_MSMixInar, 13},
    {"_hmminar_EM_MSMixInar_OmegaChain", (DL_FUNC) &_hmminar_EM_MSMixInar_OmegaChain, 13},
    {"_hmminar_EM_MSMixInar_v2", (DL_FUNC) &_hmminar_EM_MSMixInar_v2, 13},
    {"_hmminar_Filtering_MSMixInar_v2_Seasonal_Dummy_Inv", (DL_FUNC) &_hmminar_Filtering_MSMixInar_v2_Seasonal_Dummy_Inv, 11},
    {"_hmminar_EM_MSMixInar_v3", (DL_FUNC) &_hmminar_EM_MSMixInar_v3, 12},
    {"_hmminar_Filtering_MSMixInar_Seasonal_Dummy", (DL_FUNC) &_hmminar_Filtering_MSMixInar_Seasonal_Dummy, 10},
    {"_hmminar_Filtering_MSMixInar_v3_Seasonal_Dummy", (DL_FUNC) &_hmminar_Filtering_MSMixInar_v3_Seasonal_Dummy, 10},
    {"_hmminar_Sim_MSMixInar_Seasonal_Dummy", (DL_FUNC) &_hmminar_Sim_MSMixInar_Seasonal_Dummy, 8},
    {"_hmminar_Sim_MSMixInar_v2_Seasonal_Dummy", (DL_FUNC) &_hmminar_Sim_MSMixInar_v2_Seasonal_Dummy, 9},
    {"_hmminar_Sim_MSMixInar_v3_Seasonal_Dummy", (DL_FUNC) &_hmminar_Sim_MSMixInar_v3_Seasonal_Dummy, 8},
    {"_hmminar_Filtering_MSMixInar_v2_Seasonal_Dummy", (DL_FUNC) &_hmminar_Filtering_MSMixInar_v2_Seasonal_Dummy, 11},
    {"_hmminar_EM_MSMixInar_v2_Inv", (DL_FUNC) &_hmminar_EM_MSMixInar_v2_Inv, 13},
    {"_hmminar_Sim_MSMixInar_v2_Seasonal_Dummy_Inv", (DL_FUNC) &_hmminar_Sim_MSMixInar_v2_Seasonal_Dummy_Inv, 9},
    {"_hmminar_EM_MSMixInarTwoChains_Dummy_C2", (DL_FUNC) &_hmminar_EM_MSMixInarTwoChains_Dummy_C2, 15},
    {"_hmminar_EM_MSMixInarTwoChains_Dummy_C_AlphaCor", (DL_FUNC) &_hmminar_EM_MSMixInarTwoChains_Dummy_C_AlphaCor, 18},
    {"_hmminar_EM_MSMixInarTwoChains_Dummy_C_AlphaCor_OmegaIdentity", (DL_FUNC) &_hmminar_EM_MSMixInarTwoChains_Dummy_C_AlphaCor_OmegaIdentity, 18},
    {"_hmminar_InitializeBeta_INAR", (DL_FUNC) &_hmminar_InitializeBeta_INAR, 6},
    {"_hmminar_Sim_MSMixInarTwoChains", (DL_FUNC) &_hmminar_Sim_MSMixInarTwoChains, 8},
    {"_hmminar_Sim_MSMixInarTwoChains_AlphaCor", (DL_FUNC) &_hmminar_Sim_MSMixInarTwoChains_AlphaCor, 10},
    {"_hmminar_Sim_MSMixInarOneChain_AlphaCor", (DL_FUNC) &_hmminar_Sim_MSMixInarOneChain_AlphaCor, 8},
    {"_hmminar_Sim_INAR", (DL_FUNC) &_hmminar_Sim_INAR, 3},
    {"_hmminar_dE1", (DL_FUNC) &_hmminar_dE1, 4},
    {"_hmminar_dE2", (DL_FUNC) &_hmminar_dE2, 4},
    {"_hmminar_dFoo", (DL_FUNC) &_hmminar_dFoo, 4},
    {"_hmminar_UnMapC", (DL_FUNC) &_hmminar_UnMapC, 3},
    {"_hmminar_mapC_v", (DL_FUNC) &_hmminar_mapC_v, 3},
    {"_hmminar_UnmapC_v", (DL_FUNC) &_hmminar_UnmapC_v, 3},
    {"_hmminar_SimplexMapping", (DL_FUNC) &_hmminar_SimplexMapping, 2},
    {"_hmminar_SimplexUnMapping", (DL_FUNC) &_hmminar_SimplexUnMapping, 2},
    {"_hmminar_Sim_MixInar", (DL_FUNC) &_hmminar_Sim_MixInar, 4},
    {"_hmminar_Sim_MixInar_Seasonal", (DL_FUNC) &_hmminar_Sim_MixInar_Seasonal, 6},
    {"_hmminar_Sim_MixInar_Seasonal_Dummy", (DL_FUNC) &_hmminar_Sim_MixInar_Seasonal_Dummy, 6},
    {"_hmminar_Filtering_MixInar_C", (DL_FUNC) &_hmminar_Filtering_MixInar_C, 7},
    {"_hmminar_FilteringMedian_MixInar_C", (DL_FUNC) &_hmminar_FilteringMedian_MixInar_C, 8},
    {"_hmminar_Moments_C", (DL_FUNC) &_hmminar_Moments_C, 9},
    {"_hmminar_dNB", (DL_FUNC) &_hmminar_dNB, 4},
    {"_hmminar_pNB", (DL_FUNC) &_hmminar_pNB, 4},
    {"_hmminar_NBAR", (DL_FUNC) &_hmminar_NBAR, 4},
    {"_hmminar_PNBAR", (DL_FUNC) &_hmminar_PNBAR, 7},
    {"_hmminar_dNBin", (DL_FUNC) &_hmminar_dNBin, 4},
    {"_hmminar_pNBin", (DL_FUNC) &_hmminar_pNBin, 4},
    {"_hmminar_NBSoftplusSeasonalINGARCH_filter", (DL_FUNC) &_hmminar_NBSoftplusSeasonalINGARCH_filter, 9},
    {"_hmminar_NBSoftplusSeasonalINGARCH_DummySeason_filter", (DL_FUNC) &_hmminar_NBSoftplusSeasonalINGARCH_DummySeason_filter, 9},
    {"_hmminar_dNegBin", (DL_FUNC) &_hmminar_dNegBin, 4},
    {"_hmminar_rlogarithmic", (DL_FUNC) &_hmminar_rlogarithmic, 1},
    {"_hmminar_rNegBin", (DL_FUNC) &_hmminar_rNegBin, 2},
    {"_hmminar_dNeyman2", (DL_FUNC) &_hmminar_dNeyman2, 5},
    {"_hmminar_dNeyman", (DL_FUNC) &_hmminar_dNeyman, 5},
    {"_hmminar_rNeyman", (DL_FUNC) &_hmminar_rNeyman, 2},
    {"_hmminar_dPB2", (DL_FUNC) &_hmminar_dPB2, 6},
    {"_hmminar_dPB", (DL_FUNC) &_hmminar_dPB, 6},
    {"_hmminar_dMixPB", (DL_FUNC) &_hmminar_dMixPB, 7},
    {"_hmminar_pPB", (DL_FUNC) &_hmminar_pPB, 6},
    {"_hmminar_pMixPB", (DL_FUNC) &_hmminar_pMixPB, 7},
    {"_hmminar_dLLK_MixPB", (DL_FUNC) &_hmminar_dLLK_MixPB, 7},
    {"_hmminar_dLLK_MixPB_seasonal", (DL_FUNC) &_hmminar_dLLK_MixPB_seasonal, 9},
    {"_hmminar_dSumThreeBinom", (DL_FUNC) &_hmminar_dSumThreeBinom, 4},
    {"_hmminar_dSumThreeBinom_Eff", (DL_FUNC) &_hmminar_dSumThreeBinom_Eff, 5},
    {"_hmminar_dSumThreeBinom_Approx", (DL_FUNC) &_hmminar_dSumThreeBinom_Approx, 4},
    {"_hmminar_dSumMixThreeBinom", (DL_FUNC) &_hmminar_dSumMixThreeBinom, 6},
    {"_hmminar_dSumMixThreeBinom_Approx", (DL_FUNC) &_hmminar_dSumMixThreeBinom_Approx, 6},
    {"_hmminar_dSumMixThreeBinom_foo", (DL_FUNC) &_hmminar_dSumMixThreeBinom_foo, 6},
    {"_hmminar_dPoissonSumMixThreeBinom", (DL_FUNC) &_hmminar_dPoissonSumMixThreeBinom, 5},
    {"_hmminar_dLLKPoissonSumMixThreeBinom", (DL_FUNC) &_hmminar_dLLKPoissonSumMixThreeBinom, 8},
    {"_hmminar_dLLKPoissonSumMixThreeBinom_fast", (DL_FUNC) &_hmminar_dLLKPoissonSumMixThreeBinom_fast, 8},
    {"_hmminar_dLLKSumMixThreeBinom", (DL_FUNC) &_hmminar_dLLKSumMixThreeBinom, 6},
    {"_hmminar_rSumMixThreeBinom", (DL_FUNC) &_hmminar_rSumMixThreeBinom, 4},
    {"_hmminar_rPoissonSumMixThreeBinom", (DL_FUNC) &_hmminar_rPoissonSumMixThreeBinom, 4},
    {"_hmminar_f_i", (DL_FUNC) &_hmminar_f_i, 7},
    {"_hmminar_find_iMax", (DL_FUNC) &_hmminar_find_iMax, 10},
    {"_hmminar_dSumMixTwoBinom", (DL_FUNC) &_hmminar_dSumMixTwoBinom, 6},
    {"_hmminar_dSumMixTwoBinom_Eff", (DL_FUNC) &_hmminar_dSumMixTwoBinom_Eff, 7},
    {"_hmminar_dSumMixTwoBinom_foo", (DL_FUNC) &_hmminar_dSumMixTwoBinom_foo, 6},
    {"_hmminar_dLLKPoissonSumMixTwoBinom", (DL_FUNC) &_hmminar_dLLKPoissonSumMixTwoBinom, 8},
    {"_hmminar_rSumMixTwoBinom", (DL_FUNC) &_hmminar_rSumMixTwoBinom, 4},
    {"_hmminar_rNBSumMixTwoBinom", (DL_FUNC) &_hmminar_rNBSumMixTwoBinom, 5},
    {"_hmminar_rPoissonSumMixTwoBinom_Seasonal", (DL_FUNC) &_hmminar_rPoissonSumMixTwoBinom_Seasonal, 5},
    {"_hmminar_dLLKPoissonSumMixTwoBinom_Seasonal_pre", (DL_FUNC) &_hmminar_dLLKPoissonSumMixTwoBinom_Seasonal_pre, 8},
    {"_hmminar_dLLKPoissonSumMixTwoBinom_Seasonal", (DL_FUNC) &_hmminar_dLLKPoissonSumMixTwoBinom_Seasonal, 8},
    {"_hmminar_dLLKNBSumMixTwoBinom", (DL_FUNC) &_hmminar_dLLKNBSumMixTwoBinom, 8},
    {"_hmminar_PIT_MixINAR", (DL_FUNC) &_hmminar_PIT_MixINAR, 7},
    {"_hmminar_AveragePIT_MixINAR", (DL_FUNC) &_hmminar_AveragePIT_MixINAR, 8},
    {"_hmminar_PIT_Bin_MixINAR", (DL_FUNC) &_hmminar_PIT_Bin_MixINAR, 8},
    {"_hmminar_Gamma_enlarged", (DL_FUNC) &_hmminar_Gamma_enlarged, 2},
    {"_hmminar_vDelta_enlarged", (DL_FUNC) &_hmminar_vDelta_enlarged, 2},
    {"_hmminar_Indices", (DL_FUNC) &_hmminar_Indices, 2},
    {"_hmminar_Gamma_Enlarged_2", (DL_FUNC) &_hmminar_Gamma_Enlarged_2, 4},
    {"_hmminar_Gamma_Enlarged_2_OmegaChain", (DL_FUNC) &_hmminar_Gamma_Enlarged_2_OmegaChain, 3},
    {"_hmminar_GammaCheck", (DL_FUNC) &_hmminar_GammaCheck, 2},
    {"_hmminar_OmegaCheck", (DL_FUNC) &_hmminar_OmegaCheck, 3},
    {"_hmminar_MSSumMixPois_Sim", (DL_FUNC) &_hmminar_MSSumMixPois_Sim, 5},
    {"_hmminar_MSSumMixPois_Sim_Dummy", (DL_FUNC) &_hmminar_MSSumMixPois_Sim_Dummy, 7},
    {"_hmminar_StirlingNumber", (DL_FUNC) &_hmminar_StirlingNumber, 2},
    {"_hmminar_dStirling", (DL_FUNC) &_hmminar_dStirling, 4},
    {"_hmminar_dSumMixPois", (DL_FUNC) &_hmminar_dSumMixPois, 6},
    {"_hmminar_dLLK_SumMixPois", (DL_FUNC) &_hmminar_dLLK_SumMixPois, 4},
    {"_hmminar_rSumMixPois", (DL_FUNC) &_hmminar_rSumMixPois, 3},
    {"_hmminar_MixtDensityScale", (DL_FUNC) &_hmminar_MixtDensityScale, 2},
    {"_hmminar_LogSumExp", (DL_FUNC) &_hmminar_LogSumExp, 1},
    {"_hmminar_getDelta", (DL_FUNC) &_hmminar_getDelta, 2},
    {"_hmminar_LW", (DL_FUNC) &_hmminar_LW, 3},
    {"_hmminar_OmegaZB_Indices", (DL_FUNC) &_hmminar_OmegaZB_Indices, 3},
    {"_hmminar_BoundProbs", (DL_FUNC) &_hmminar_BoundProbs, 2},
    {"_hmminar_BoundGamma", (DL_FUNC) &_hmminar_BoundGamma, 2},
    {"_hmminar_dZTNB", (DL_FUNC) &_hmminar_dZTNB, 4},
    {"_hmminar_dSumZTNB", (DL_FUNC) &_hmminar_dSumZTNB, 5},
    {"_hmminar_dLLK_SumZTNB", (DL_FUNC) &_hmminar_dLLK_SumZTNB, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_hmminar(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
